{"status":{},"contains_secrets":true,"product_version":"3.4.0","spec":{"description":"Creation of AD, DNS, VPCs and Blueprints\n\nFloating IP address: \n\nAZ1: @@{AZ1 Jumphost.AZ1_Jumphost_FloatingIP}@@\n\nAZ2: @@{AZ2 Jumphost.AZ2_Jumphost_FloatingIP}@@\n\nAZ3: @@{AZ3 Jumphost.AZ3_Jumphost_FloatingIP}@@\n\n","resources":{"client_attrs":{"None":{"y":515.5,"x":-105.375},"5c8aa840_deployment":{"y":526,"x":526},"128a59a4_deployment":{"y":525.5,"x":314.75},"1152c091_deployment":{"y":144.5,"x":316.75},"c68e402c_deployment":{"y":865.5,"x":100.625},"a57799da_deployment":{"y":527.5,"x":102.625},"90a2ebda_deployment":{"y":142.5,"x":105.625},"911fc859_deployment":{"y":869.5,"x":312.75},"179cac72_deployment":{"y":142.5,"x":-163.25},"f5e4201e_deployment":{"y":866.5,"x":-142.25},"e32a1442_deployment":{"y":518.5,"x":-146.25}},"service_definition_list":[{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"API Tasks"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"c459a88d_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"a56f448d_runbook","main_task_local_reference":{"kind":"app_task","name":"c459a88d_dag"},"variable_list":[]},"name":"action_create"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"API Tasks"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"593cc025_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"ce09ea6d_runbook","main_task_local_reference":{"kind":"app_task","name":"593cc025_dag"},"variable_list":[]},"name":"action_delete"},{"description":"System action for starting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"API Tasks"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"fc6d78e4_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"5d872716_runbook","main_task_local_reference":{"kind":"app_task","name":"fc6d78e4_dag"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"API Tasks"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"bdca4153_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"4d099b6e_runbook","main_task_local_reference":{"kind":"app_task","name":"bdca4153_dag"},"variable_list":[]},"name":"action_stop"},{"description":"System action for restarting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"API Tasks"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"a0e3959f_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"e143a65b_runbook","main_task_local_reference":{"kind":"app_task","name":"a0e3959f_dag"},"variable_list":[]},"name":"action_restart"}],"depends_on_list":[],"name":"API Tasks","port_list":[],"tier":"","variable_list":[],"description":""},{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ1 DC"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"b6d05f1d_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"bbbe7d7c_runbook","main_task_local_reference":{"kind":"app_task","name":"b6d05f1d_dag"},"variable_list":[]},"name":"action_create"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ1 DC"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"636c583d_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"ac8f5c3b_runbook","main_task_local_reference":{"kind":"app_task","name":"636c583d_dag"},"variable_list":[]},"name":"action_delete"},{"description":"System action for starting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ1 DC"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"6b8c1340_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"8767addb_runbook","main_task_local_reference":{"kind":"app_task","name":"6b8c1340_dag"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ1 DC"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"485b3eb2_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"63d486da_runbook","main_task_local_reference":{"kind":"app_task","name":"485b3eb2_dag"},"variable_list":[]},"name":"action_stop"},{"description":"System action for restarting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ1 DC"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"26a25523_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"16b59222_runbook","main_task_local_reference":{"kind":"app_task","name":"26a25523_dag"},"variable_list":[]},"name":"action_restart"}],"depends_on_list":[{"kind":"app_service","name":"API Tasks"}],"name":"AZ1 DC","port_list":[],"tier":"","variable_list":[],"description":""},{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ2 DC"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"b6d05f1d_dag_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"bbbe7d7c_runbook_cloned_0","main_task_local_reference":{"kind":"app_task","name":"b6d05f1d_dag_cloned_1"},"variable_list":[]},"name":"action_create"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ2 DC"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"636c583d_dag_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"ac8f5c3b_runbook_cloned_0","main_task_local_reference":{"kind":"app_task","name":"636c583d_dag_cloned_1"},"variable_list":[]},"name":"action_delete"},{"description":"System action for starting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ2 DC"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"6b8c1340_dag_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"8767addb_runbook_cloned_0","main_task_local_reference":{"kind":"app_task","name":"6b8c1340_dag_cloned_1"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ2 DC"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"485b3eb2_dag_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"63d486da_runbook_cloned_0","main_task_local_reference":{"kind":"app_task","name":"485b3eb2_dag_cloned_1"},"variable_list":[]},"name":"action_stop"},{"description":"System action for restarting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ2 DC"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"26a25523_dag_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"16b59222_runbook_cloned_0","main_task_local_reference":{"kind":"app_task","name":"26a25523_dag_cloned_1"},"variable_list":[]},"name":"action_restart"}],"depends_on_list":[{"kind":"app_service","name":"API Tasks"}],"name":"AZ2 DC","port_list":[],"tier":"","variable_list":[],"description":""},{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ3 DC"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"b6d05f1d_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"bbbe7d7c_runbook_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"b6d05f1d_dag_cloned_1_cloned_1"},"variable_list":[]},"name":"action_create"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ3 DC"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"636c583d_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"ac8f5c3b_runbook_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"636c583d_dag_cloned_1_cloned_1"},"variable_list":[]},"name":"action_delete"},{"description":"System action for starting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ3 DC"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"6b8c1340_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"8767addb_runbook_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"6b8c1340_dag_cloned_1_cloned_1"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ3 DC"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"485b3eb2_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"63d486da_runbook_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"485b3eb2_dag_cloned_1_cloned_1"},"variable_list":[]},"name":"action_stop"},{"description":"System action for restarting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ3 DC"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"26a25523_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"16b59222_runbook_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"26a25523_dag_cloned_1_cloned_1"},"variable_list":[]},"name":"action_restart"}],"depends_on_list":[{"kind":"app_service","name":"API Tasks"}],"name":"AZ3 DC","port_list":[],"tier":"","variable_list":[],"description":""},{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ1 Svc Helper"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Az1SvcTunnelVMTasks"}],"name":"1fb2fcb8_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AZ1 Svc Helper"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Az1SvcTunnelVMTasks","attrs":{"exit_status":[],"script":"external_subnet_reference = '@@{APITasks.AZ1_EXTERNAL_SUBNET_UUID}@@'\naz_vpc_uuid = '@@{APITasks.AZ1_VPC_UUID}@@'\nazProviderAccountName = \"@@{AZ1_PROVIDER_NAME}@@\"\naz_pc_ip = '@@{AZ1_PC_IP}@@'\naz_pc_username = \"@@{AZ1_PC_CREDENTIALS.username}@@\"\naz_pc_password = \"@@{AZ1_PC_CREDENTIALS.secret}@@\"\ncalmTunnelName = \"@@{APITasks.AZ1_SVC_SUBNET_TUNNEL_NAME}@@\"\ncalmTunnelUUID = \"@@{APITasks.AZ1_SVC_SUBNET_TUNNEL_UUID}@@\"\nvmName = \"@@{AZ1 Svc Helper VM.name}@@\"\n\nvpcName = '@@{TENANT_NAME}@@-vpc'.lower()\ncalmIP = \"@@{CalmVM_VirtualIP}@@\"\napikey = \"@@{CalmTunnelVM_API_Token}@@\"\napiuser = \"@@{CalmTunnelVM_API_User}@@\"\njwt = '@@{calm_jwt}@@' #uses the JWT Token of the CalmVM Instance. Coz the Project COnstructs are hosted within CalmVM\n\ndef getVmNicIp(AzPC_IP,username,password,vmName):\n    api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/vms\/list'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n    payload = {\n        \"kind\": \"vm\",\n        \"filter\": \"vm_name=={}\".format(vmName)\n    }\n\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n    if r.ok:\n        resp = json.loads(r.content)\n        print(resp['entities'][0]['status']['resources']['nic_list'][1]['ip_endpoint_list'])[0]['ip']\n        return resp['entities'][0]['status']['resources']['nic_list'][1]['ip_endpoint_list'][0]['ip']\n\ndef assignFloatingIp(AzPC_IP,username,password,vmNicUuid,VpcExternal_subnet_reference):\n\n    api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/floating_ips'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n    payload = {\n        \"spec\": {\n            \"resources\": {\n                \"vm_nic_reference\": {\n                    \"kind\": \"vm_nic\",\n                    \"uuid\": vmNicUuid\n                },\n                \"external_subnet_reference\": {\n                    \"kind\": \"subnet\",\n                    \"uuid\": VpcExternal_subnet_reference\n                }\n            }\n        },\n        \"api_version\": \"3.1.0\",\n        \"metadata\": {\n            \"kind\": \"floating_ip\"\n        }\n    }\n    \n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n    if r.ok:\n        resp = json.loads(r.content)\n        task_uuid = resp['status']['execution_context']['task_uuid']\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n\n    state = \"\"\n    while state != \"SUCCEEDED\":\n        api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/tasks\/{}'.format(task_uuid)\n\n        sleep(2)\n        r = urlreq(api_url, verb='GET', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n        if r.ok:\n            resp = json.loads(r.content)\n            state = resp['status']\n            print(resp)\n            if state == \"FAILED\":\n                print(\"Task failed\", resp['progress_message'])\n                exit(1)\n\n        else:\n            print(\"Post request failed\", r.content)\n            exit(1)\n    \n    floatingIpUuid = resp['entity_reference_list'][0]['uuid']\n\n    api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/floating_ips\/{}'.format(floatingIpUuid)\n\n    r = urlreq(api_url, verb='GET', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n    if r.ok:\n        resp = json.loads(r.content)\n        floatingIpAddress = resp['status']['resources']['floating_ip']\n        return floatingIpAddress\n\ndef changeTunnelVmPw(tunnelVMfloatingIP):\n    api_url = 'http:\/\/' + tunnelVMfloatingIP + ':80\/v1\/credentials'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n    payload = {\n        \"username\": \"calm\",\n        \"password\": \"calm\"\n    }\n\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user='calm', passwd='keepcalm')\n    if r.ok:\n        print(\"TunnelVM Password Change Successful: \",r.content)\n    else:\n        print(\"Tunnel VM Password Change Failed\")\n\ndef registerTunnelVM(tunnelVMfloatingIP,calmVmIp,keyName,keyToken,tunnelID,tunnelName):\n    api_url = 'http:\/\/' + tunnelVMfloatingIP + ':80\/v1\/tunnels'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n    payload = {\n        \"calm_url\": \"https:\/\/{}:9440\".format(calmVmIp),\n        \"api_user\": \"{}\".format(keyName),\n        \"api_password\": \"{}\".format(keyToken),\n        \"tunnel_id\": \"{}\".format(tunnelID),\n        \"tunnel_name\": \"{}\".format(tunnelName),\n        \"proxy_url\": \"\"\n    }\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user='calm', passwd='calm')\n    if r.ok:\n        print(\"Tunnel VM Registration Successful: \",r.content)\n    else:\n        print(\"Tunnel VM registration Failed\")\n \n\ndef get_account_uuid(account_name):\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/accounts\/list'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n\n    payload = {\n        \"filter\": \"name=={}\".format(account_name)\n    }\n\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        return resp['entities'][0]['metadata']['uuid']\n    else:\n        print(\"get_account_uuid request failed\")\n\ndef create_calm_vpc_entity(calmTunnelname, calmTunnelUuid, azVpcUuid, calmAccountName,azVpcName):\n    account_uuid = get_account_uuid(calmAccountName)\n\n    payload = {\n        \"spec\": {\n            \"name\": \"{}\".format(azVpcName + \"_\" + calmAccountName),\n            \"resources\": {\n                \"vpc_uuid\": \"{}\".format(azVpcUuid),\n                \"tunnel_reference\": {\n                    \"kind\": \"tunnel\",\n                    \"name\": \"{}\".format(calmTunnelname),\n                    \"uuid\": \"{}\".format(calmTunnelUuid)\n                },\n                \"account_reference\": {\n                    \"kind\": \"account\",\n                    \"name\": \"{}\".format(calmAccountName),\n                    \"uuid\": \"{}\".format(account_uuid)\n                }\n            }\n        },\n        \"api_version\": \"3.1.0\",\n        \"metadata\": {\n            \"kind\": \"calm_vpc\"\n        }\n    }\n    print(json.dumps(payload))\n\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/calm_vpcs'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False)\n    print(r.status_code)\n    print(r.json())\n    if r.ok:\n        resp = json.loads(r.content)\n        return resp['metadata']['uuid']\n    else:\n        print(\"get_account_uuid request failed\")\n\n\n\nvmNicIpAdress = getVmNicIp(az_pc_ip,az_pc_username,az_pc_password,vmName)\nsleep(60)\n\nchangeTunnelVmPw(vmNicIpAdress)\nsleep(180)\n\nregisterTunnelVM(vmNicIpAdress,calmIP,apiuser,apikey,calmTunnelUUID,calmTunnelName)\nsleep(300)\n\ncalmVpcEntity = create_calm_vpc_entity(calmTunnelName,calmTunnelUUID,az_vpc_uuid,azProviderAccountName,vpcName)\nprint(\"Az1VpcCalmTunnelRegUUID={}\".format(calmVpcEntity))","eval_variables":["Az1VpcCalmTunnelRegUUID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]}],"description":"","name":"82b5e296_runbook","main_task_local_reference":{"kind":"app_task","name":"1fb2fcb8_dag"},"variable_list":[]},"name":"action_create"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ1 Svc Helper"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"CleanUpAz1Ref"}],"name":"6a85e4d9_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AZ1 Svc Helper"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"CleanUpAz1Ref","attrs":{"script":"jwt = '@@{calm_jwt}@@'\ncleanupuuid = \"@@{Az1VpcCalmTunnelRegUUID}@@\"\ndef cleanUpCalmVpcReg(regUuid):\n  api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/calm_vpcs\/{}'.format(projectUUID)\n  headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n  payload = {}\n  r = urlreq(api_url, verb='DELETE', params=json.dumps(payload), headers=headers, verify=False)\n  if r.ok:\n      resp = json.loads(r.content)\n      print(r.content)\n\n  else:\n      print(\"Post request failed\", r.content)\n      exit(1)\n\ncleanUpCalmVpcReg(cleanupuuid)\n      \n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"2da509cb_runbook","main_task_local_reference":{"kind":"app_task","name":"6a85e4d9_dag"},"variable_list":[]},"name":"action_delete"},{"description":"System action for starting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ1 Svc Helper"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"4662e866_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"e4054679_runbook","main_task_local_reference":{"kind":"app_task","name":"4662e866_dag"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ1 Svc Helper"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"d99b0fdf_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"60d3069c_runbook","main_task_local_reference":{"kind":"app_task","name":"d99b0fdf_dag"},"variable_list":[]},"name":"action_stop"},{"description":"System action for restarting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ1 Svc Helper"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"223b4a5e_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"047e8db6_runbook","main_task_local_reference":{"kind":"app_task","name":"223b4a5e_dag"},"variable_list":[]},"name":"action_restart"}],"depends_on_list":[],"name":"AZ1 Svc Helper","port_list":[],"tier":"","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"Az1VpcCalmTunnelRegUUID","value":"","label":"","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}}],"description":""},{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ2 Svc Helper"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Az2SvcTunnelVMTasks"}],"name":"1fb2fcb8_dag_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AZ2 Svc Helper"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Az2SvcTunnelVMTasks","attrs":{"exit_status":[],"script":"external_subnet_reference = '@@{APITasks.AZ2_EXTERNAL_SUBNET_UUID}@@'\naz_vpc_uuid = '@@{APITasks.AZ2_VPC_UUID}@@'\nazProviderAccountName = \"@@{AZ2_PROVIDER_NAME}@@\"\naz_pc_ip = '@@{AZ2_PC_IP}@@'\naz_pc_username = \"@@{AZ2_PC_CREDENTIALS.username}@@\"\naz_pc_password = \"@@{AZ2_PC_CREDENTIALS.secret}@@\"\ncalmTunnelName = \"@@{APITasks.AZ2_SVC_SUBNET_TUNNEL_NAME}@@\"\ncalmTunnelUUID = \"@@{APITasks.AZ2_SVC_SUBNET_TUNNEL_UUID}@@\"\nvmName = \"@@{AZ2 Svc Helper VM.name}@@\"\n\nvpcName = '@@{TENANT_NAME}@@-vpc'.lower()\ncalmIP = \"@@{CalmVM_VirtualIP}@@\"\napikey = \"@@{CalmTunnelVM_API_Token}@@\"\napiuser = \"@@{CalmTunnelVM_API_User}@@\"\njwt = '@@{calm_jwt}@@' #uses the JWT Token of the CalmVM Instance. Coz the Project COnstructs are hosted within CalmVM\n\ndef getVmNicIp(AzPC_IP,username,password,vmName):\n    api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/vms\/list'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n    payload = {\n        \"kind\": \"vm\",\n        \"filter\": \"vm_name=={}\".format(vmName)\n    }\n\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n    if r.ok:\n        resp = json.loads(r.content)\n        print(resp['entities'][0]['status']['resources']['nic_list'][1]['ip_endpoint_list'])[0]['ip']\n        return resp['entities'][0]['status']['resources']['nic_list'][1]['ip_endpoint_list'][0]['ip']\n\ndef assignFloatingIp(AzPC_IP,username,password,vmNicUuid,VpcExternal_subnet_reference):\n\n    api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/floating_ips'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n    payload = {\n        \"spec\": {\n            \"resources\": {\n                \"vm_nic_reference\": {\n                    \"kind\": \"vm_nic\",\n                    \"uuid\": vmNicUuid\n                },\n                \"external_subnet_reference\": {\n                    \"kind\": \"subnet\",\n                    \"uuid\": VpcExternal_subnet_reference\n                }\n            }\n        },\n        \"api_version\": \"3.1.0\",\n        \"metadata\": {\n            \"kind\": \"floating_ip\"\n        }\n    }\n    \n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n    if r.ok:\n        resp = json.loads(r.content)\n        task_uuid = resp['status']['execution_context']['task_uuid']\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n\n    state = \"\"\n    while state != \"SUCCEEDED\":\n        api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/tasks\/{}'.format(task_uuid)\n\n        sleep(2)\n        r = urlreq(api_url, verb='GET', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n        if r.ok:\n            resp = json.loads(r.content)\n            state = resp['status']\n            print(resp)\n            if state == \"FAILED\":\n                print(\"Task failed\", resp['progress_message'])\n                exit(1)\n\n        else:\n            print(\"Post request failed\", r.content)\n            exit(1)\n    \n    floatingIpUuid = resp['entity_reference_list'][0]['uuid']\n\n    api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/floating_ips\/{}'.format(floatingIpUuid)\n\n    r = urlreq(api_url, verb='GET', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n    if r.ok:\n        resp = json.loads(r.content)\n        floatingIpAddress = resp['status']['resources']['floating_ip']\n        return floatingIpAddress\n\ndef changeTunnelVmPw(tunnelVMfloatingIP):\n    api_url = 'http:\/\/' + tunnelVMfloatingIP + ':80\/v1\/credentials'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n    payload = {\n        \"username\": \"calm\",\n        \"password\": \"calm\"\n    }\n\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user='calm', passwd='keepcalm')\n    if r.ok:\n        print(\"TunnelVM Password Change Successful: \",r.content)\n    else:\n        print(\"Tunnel VM Password Change Failed\")\n\ndef registerTunnelVM(tunnelVMfloatingIP,calmVmIp,keyName,keyToken,tunnelID,tunnelName):\n    api_url = 'http:\/\/' + tunnelVMfloatingIP + ':80\/v1\/tunnels'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n    payload = {\n        \"calm_url\": \"https:\/\/{}:9440\".format(calmVmIp),\n        \"api_user\": \"{}\".format(keyName),\n        \"api_password\": \"{}\".format(keyToken),\n        \"tunnel_id\": \"{}\".format(tunnelID),\n        \"tunnel_name\": \"{}\".format(tunnelName),\n        \"proxy_url\": \"\"\n    }\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user='calm', passwd='calm')\n    if r.ok:\n        print(\"Tunnel VM Registration Successful: \",r.content)\n    else:\n        print(\"Tunnel VM registration Failed\")\n\n\ndef get_account_uuid(account_name):\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/accounts\/list'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n\n    payload = {\n        \"filter\": \"name=={}\".format(account_name)\n    }\n\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        return resp['entities'][0]['metadata']['uuid']\n    else:\n        print(\"get_account_uuid request failed\")\n\ndef create_calm_vpc_entity(calmTunnelname, calmTunnelUuid, azVpcUuid, calmAccountName,azVpcName):\n    account_uuid = get_account_uuid(calmAccountName)\n\n    payload = {\n        \"spec\": {\n            \"name\": \"{}\".format(azVpcName + \"_\" + calmAccountName),\n            \"resources\": {\n                \"vpc_uuid\": \"{}\".format(azVpcUuid),\n                \"tunnel_reference\": {\n                    \"kind\": \"tunnel\",\n                    \"name\": \"{}\".format(calmTunnelname),\n                    \"uuid\": \"{}\".format(calmTunnelUuid)\n                },\n                \"account_reference\": {\n                    \"kind\": \"account\",\n                    \"name\": \"{}\".format(calmAccountName),\n                    \"uuid\": \"{}\".format(account_uuid)\n                }\n            }\n        },\n        \"api_version\": \"3.1.0\",\n        \"metadata\": {\n            \"kind\": \"calm_vpc\"\n        }\n    }\n    print(json.dumps(payload))\n\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/calm_vpcs'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False)\n    print(r.status_code)\n    print(r.json())\n    if r.ok:\n        resp = json.loads(r.content)\n        return resp['metadata']['uuid']\n    else:\n        print(\"get_account_uuid request failed\")   \n\n        \n\nvmNicIpAdress = getVmNicIp(az_pc_ip,az_pc_username,az_pc_password,vmName)\nsleep(60)\n\nchangeTunnelVmPw(vmNicIpAdress)\nsleep(180)\n\nregisterTunnelVM(vmNicIpAdress,calmIP,apiuser,apikey,calmTunnelUUID,calmTunnelName)\nsleep(300)\n\ncalmVpcEntity = create_calm_vpc_entity(calmTunnelName,calmTunnelUUID,az_vpc_uuid,azProviderAccountName,vpcName)\nprint(\"Az2VpcCalmTunnelRegUUID={}\".format(calmVpcEntity))","eval_variables":["Az2VpcCalmTunnelRegUUID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]}],"description":"","name":"82b5e296_runbook_cloned_1","main_task_local_reference":{"kind":"app_task","name":"1fb2fcb8_dag_cloned_1"},"variable_list":[]},"name":"action_create"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ2 Svc Helper"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"CleanUpAz2Ref"}],"name":"6a85e4d9_dag_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AZ2 Svc Helper"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"CleanUpAz2Ref","attrs":{"script":"jwt = '@@{calm_jwt}@@'\ncleanupuuid = \"@@{Az2VpcCalmTunnelRegUUID}@@\"\ndef cleanUpCalmVpcReg(regUuid):\n  api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/calm_vpcs\/{}'.format(projectUUID)\n  headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n  payload = {}\n  r = urlreq(api_url, verb='DELETE', params=json.dumps(payload), headers=headers, verify=False)\n  if r.ok:\n      resp = json.loads(r.content)\n      print(r.content)\n\n  else:\n      print(\"Post request failed\", r.content)\n      exit(1)\n\ncleanUpCalmVpcReg(cleanupuuid)\n      \n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"2da509cb_runbook_cloned_1","main_task_local_reference":{"kind":"app_task","name":"6a85e4d9_dag_cloned_1"},"variable_list":[]},"name":"action_delete"},{"description":"System action for starting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ2 Svc Helper"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"4662e866_dag_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"e4054679_runbook_cloned_1","main_task_local_reference":{"kind":"app_task","name":"4662e866_dag_cloned_1"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ2 Svc Helper"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"d99b0fdf_dag_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"60d3069c_runbook_cloned_1","main_task_local_reference":{"kind":"app_task","name":"d99b0fdf_dag_cloned_1"},"variable_list":[]},"name":"action_stop"},{"description":"System action for restarting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ2 Svc Helper"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"223b4a5e_dag_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"047e8db6_runbook_cloned_1","main_task_local_reference":{"kind":"app_task","name":"223b4a5e_dag_cloned_1"},"variable_list":[]},"name":"action_restart"}],"depends_on_list":[],"name":"AZ2 Svc Helper","port_list":[],"tier":"","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"Az2VpcCalmTunnelRegUUID","value":"","label":"","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}}],"description":""},{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ3 Svc Helper"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Az3SvcTunnelVMTasks"}],"name":"1fb2fcb8_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AZ3 Svc Helper"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Az3SvcTunnelVMTasks","attrs":{"exit_status":[],"script":"external_subnet_reference = '@@{APITasks.AZ3_EXTERNAL_SUBNET_UUID}@@'\naz_vpc_uuid = '@@{APITasks.AZ3_VPC_UUID}@@'\nazProviderAccountName = \"@@{AZ3_PROVIDER_NAME}@@\"\naz_pc_ip = '@@{AZ3_PC_IP}@@'\naz_pc_username = \"@@{AZ3_PC_CREDENTIALS.username}@@\"\naz_pc_password = \"@@{AZ3_PC_CREDENTIALS.secret}@@\"\ncalmTunnelName = \"@@{APITasks.AZ3_SVC_SUBNET_TUNNEL_NAME}@@\"\ncalmTunnelUUID = \"@@{APITasks.AZ3_SVC_SUBNET_TUNNEL_UUID}@@\"\nvmName = \"@@{AZ3 Svc Helper VM.name}@@\"\n\nvpcName = '@@{TENANT_NAME}@@-vpc'.lower()\ncalmIP = \"@@{CalmVM_VirtualIP}@@\"\napikey = \"@@{CalmTunnelVM_API_Token}@@\"\napiuser = \"@@{CalmTunnelVM_API_User}@@\"\njwt = '@@{calm_jwt}@@' #uses the JWT Token of the CalmVM Instance. Coz the Project COnstructs are hosted within CalmVM\n\ndef getVmNicIp(AzPC_IP,username,password,vmName):\n    api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/vms\/list'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n    payload = {\n        \"kind\": \"vm\",\n        \"filter\": \"vm_name=={}\".format(vmName)\n    }\n\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n    if r.ok:\n        resp = json.loads(r.content)\n        print(resp['entities'][0]['status']['resources']['nic_list'][1]['ip_endpoint_list'])[0]['ip']\n        return resp['entities'][0]['status']['resources']['nic_list'][1]['ip_endpoint_list'][0]['ip']\n\ndef assignFloatingIp(AzPC_IP,username,password,vmNicUuid,VpcExternal_subnet_reference):\n\n    api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/floating_ips'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n    payload = {\n        \"spec\": {\n            \"resources\": {\n                \"vm_nic_reference\": {\n                    \"kind\": \"vm_nic\",\n                    \"uuid\": vmNicUuid\n                },\n                \"external_subnet_reference\": {\n                    \"kind\": \"subnet\",\n                    \"uuid\": VpcExternal_subnet_reference\n                }\n            }\n        },\n        \"api_version\": \"3.1.0\",\n        \"metadata\": {\n            \"kind\": \"floating_ip\"\n        }\n    }\n    \n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n    if r.ok:\n        resp = json.loads(r.content)\n        task_uuid = resp['status']['execution_context']['task_uuid']\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n\n    state = \"\"\n    while state != \"SUCCEEDED\":\n        api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/tasks\/{}'.format(task_uuid)\n\n        sleep(2)\n        r = urlreq(api_url, verb='GET', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n        if r.ok:\n            resp = json.loads(r.content)\n            state = resp['status']\n            print(resp)\n            if state == \"FAILED\":\n                print(\"Task failed\", resp['progress_message'])\n                exit(1)\n\n        else:\n            print(\"Post request failed\", r.content)\n            exit(1)\n    \n    floatingIpUuid = resp['entity_reference_list'][0]['uuid']\n\n    api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/floating_ips\/{}'.format(floatingIpUuid)\n\n    r = urlreq(api_url, verb='GET', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n    if r.ok:\n        resp = json.loads(r.content)\n        floatingIpAddress = resp['status']['resources']['floating_ip']\n        return floatingIpAddress\n\ndef changeTunnelVmPw(tunnelVMfloatingIP):\n    api_url = 'http:\/\/' + tunnelVMfloatingIP + ':80\/v1\/credentials'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n    payload = {\n        \"username\": \"calm\",\n        \"password\": \"calm\"\n    }\n\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user='calm', passwd='keepcalm')\n    if r.ok:\n        print(\"TunnelVM Password Change Successful: \",r.content)\n    else:\n        print(\"Tunnel VM Password Change Failed\")\n\ndef registerTunnelVM(tunnelVMfloatingIP,calmVmIp,keyName,keyToken,tunnelID,tunnelName):\n    api_url = 'http:\/\/' + tunnelVMfloatingIP + ':80\/v1\/tunnels'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n    payload = {\n        \"calm_url\": \"https:\/\/{}:9440\".format(calmVmIp),\n        \"api_user\": \"{}\".format(keyName),\n        \"api_password\": \"{}\".format(keyToken),\n        \"tunnel_id\": \"{}\".format(tunnelID),\n        \"tunnel_name\": \"{}\".format(tunnelName),\n        \"proxy_url\": \"\"\n    }\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user='calm', passwd='calm')\n    if r.ok:\n        print(\"Tunnel VM Registration Successful: \",r.content)\n    else:\n        print(\"Tunnel VM registration Failed\")\n \n\ndef get_account_uuid(account_name):\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/accounts\/list'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n\n    payload = {\n        \"filter\": \"name=={}\".format(account_name)\n    }\n\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        return resp['entities'][0]['metadata']['uuid']\n    else:\n        print(\"get_account_uuid request failed\")\n\ndef create_calm_vpc_entity(calmTunnelname, calmTunnelUuid, azVpcUuid, calmAccountName,azVpcName):\n    account_uuid = get_account_uuid(calmAccountName)\n\n    payload = {\n        \"spec\": {\n            \"name\": \"{}\".format(azVpcName + \"_\" + calmAccountName),\n            \"resources\": {\n                \"vpc_uuid\": \"{}\".format(azVpcUuid),\n                \"tunnel_reference\": {\n                    \"kind\": \"tunnel\",\n                    \"name\": \"{}\".format(calmTunnelname),\n                    \"uuid\": \"{}\".format(calmTunnelUuid)\n                },\n                \"account_reference\": {\n                    \"kind\": \"account\",\n                    \"name\": \"{}\".format(calmAccountName),\n                    \"uuid\": \"{}\".format(account_uuid)\n                }\n            }\n        },\n        \"api_version\": \"3.1.0\",\n        \"metadata\": {\n            \"kind\": \"calm_vpc\"\n        }\n    }\n    print(json.dumps(payload))\n\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/calm_vpcs'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False)\n    print(r.status_code)\n    print(r.json())\n    if r.ok:\n        resp = json.loads(r.content)\n        return resp['metadata']['uuid']\n    else:\n        print(\"get_account_uuid request failed\")   \n\n\n        \nvmNicIpAdress = getVmNicIp(az_pc_ip,az_pc_username,az_pc_password,vmName)\nsleep(60)\n\nchangeTunnelVmPw(vmNicIpAdress)\nsleep(180)\n\nregisterTunnelVM(vmNicIpAdress,calmIP,apiuser,apikey,calmTunnelUUID,calmTunnelName)\nsleep(300)\n\ncalmVpcEntity = create_calm_vpc_entity(calmTunnelName,calmTunnelUUID,az_vpc_uuid,azProviderAccountName,vpcName)\nprint(\"Az3VpcCalmTunnelRegUUID={}\".format(calmVpcEntity))","eval_variables":["Az3VpcCalmTunnelRegUUID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]}],"description":"","name":"82b5e296_runbook_cloned_1_cloned_0","main_task_local_reference":{"kind":"app_task","name":"1fb2fcb8_dag_cloned_1_cloned_1"},"variable_list":[]},"name":"action_create"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ3 Svc Helper"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"CleanUpAz3Ref"}],"name":"6a85e4d9_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AZ3 Svc Helper"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"CleanUpAz3Ref","attrs":{"script":"jwt = '@@{calm_jwt}@@'\ncleanupuuid = \"@@{Az3VpcCalmTunnelRegUUID}@@\"\ndef cleanUpCalmVpcReg(regUuid):\n  api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/calm_vpcs\/{}'.format(projectUUID)\n  headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n  payload = {}\n  r = urlreq(api_url, verb='DELETE', params=json.dumps(payload), headers=headers, verify=False)\n  if r.ok:\n      resp = json.loads(r.content)\n      print(r.content)\n\n  else:\n      print(\"Post request failed\", r.content)\n      exit(1)\n\ncleanUpCalmVpcReg(cleanupuuid)\n      \n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"2da509cb_runbook_cloned_1_cloned_0","main_task_local_reference":{"kind":"app_task","name":"6a85e4d9_dag_cloned_1_cloned_1"},"variable_list":[]},"name":"action_delete"},{"description":"System action for starting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ3 Svc Helper"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"4662e866_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"e4054679_runbook_cloned_1_cloned_0","main_task_local_reference":{"kind":"app_task","name":"4662e866_dag_cloned_1_cloned_1"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ3 Svc Helper"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"d99b0fdf_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"60d3069c_runbook_cloned_1_cloned_0","main_task_local_reference":{"kind":"app_task","name":"d99b0fdf_dag_cloned_1_cloned_1"},"variable_list":[]},"name":"action_stop"},{"description":"System action for restarting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ3 Svc Helper"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"223b4a5e_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"047e8db6_runbook_cloned_1_cloned_0","main_task_local_reference":{"kind":"app_task","name":"223b4a5e_dag_cloned_1_cloned_1"},"variable_list":[]},"name":"action_restart"}],"depends_on_list":[],"name":"AZ3 Svc Helper","port_list":[],"tier":"","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"Az3VpcCalmTunnelRegUUID","value":"","label":"","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}}],"description":""},{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ1 Jumphost"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Floating IP AZ1"}],"name":"b6d05f1d_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AZ1 Jumphost"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Set Floating IP AZ1","attrs":{"exit_status":[],"script":"def get_az_external_subnet_uuid(az_pc_ip,az_pc_username,az_pc_password,external_subnet_name):\n  api_url = 'https:\/\/' + az_pc_ip + ':9440\/api\/nutanix\/v3\/subnets\/list'\n  headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n  \n  payload = {\n      'kind': 'subnet'\n  }\n  \n  r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\" ,user=az_pc_username, passwd=az_pc_password)\n  if r.ok:\n    resp = json.loads(r.content)\n  else:\n    print(\"Function get_az_external_subnet_uuid Post Request Failed\", r.content)\n    exit(1)\n  \n  for subnet in resp['entities']:\n    if subnet['spec']['name'] == external_subnet_name:\n      #print(subnet['metadata']['uuid'])\n      return subnet['metadata']['uuid']\n\ndef getVmNicUuid(AzPC_IP,username,password,vmName):\n    api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/vms\/list'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n    payload = {\n        \"kind\": \"vm\",\n        \"filter\": \"vm_name=={}\".format(vmName)\n    }\n\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n    if r.ok:\n        resp = json.loads(r.content)\n        print(resp['entities'][0]['status']['resources']['nic_list'][0]['uuid'])\n        return resp['entities'][0]['status']['resources']['nic_list'][0]['uuid']\n      \ndef assignFloatingIp(AzPC_IP,username,password,vmNicUuid,VpcExternal_subnet_reference):\n\n    api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/floating_ips'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n    payload = {\n        \"spec\": {\n            \"resources\": {\n                \"vm_nic_reference\": {\n                    \"kind\": \"vm_nic\",\n                    \"uuid\": vmNicUuid\n                },\n                \"external_subnet_reference\": {\n                    \"kind\": \"subnet\",\n                    \"uuid\": VpcExternal_subnet_reference\n                }\n            }\n        },\n        \"api_version\": \"3.1.0\",\n        \"metadata\": {\n            \"kind\": \"floating_ip\"\n        }\n    }\n    \n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n    if r.ok:\n        resp = json.loads(r.content)\n        task_uuid = resp['status']['execution_context']['task_uuid']\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n\n    state = \"\"\n    while state != \"SUCCEEDED\":\n        api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/tasks\/{}'.format(task_uuid)\n\n        sleep(2)\n        r = urlreq(api_url, verb='GET', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n        if r.ok:\n            resp = json.loads(r.content)\n            state = resp['status']\n            print(resp)\n            if state == \"FAILED\":\n                print(\"Task failed\", resp['progress_message'])\n                exit(1)\n\n        else:\n            print(\"Post request failed\", r.content)\n            exit(1)\n    \n    floatingIpUuid = resp['entity_reference_list'][0]['uuid']\n\n    api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/floating_ips\/{}'.format(floatingIpUuid)\n\n    r = urlreq(api_url, verb='GET', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n    if r.ok:\n        resp = json.loads(r.content)\n        floatingIpAddress = resp['status']['resources']['floating_ip']\n        return floatingIpAddress\n      \n      \n      \n\naz_pc_ip = \"@@{AZ1_PC_IP}@@\"\naz_pc_username = \"@@{AZ1_PC_CREDENTIALS.username}@@\"\naz_pc_password = \"@@{AZ1_PC_CREDENTIALS.secret}@@\"\nexternalSubnetName = \"@@{AZ1_VPC_EXTERNAL_SUBNET_NAME}@@\"\nvmName = \"@@{name}@@\"\nexternalSubnetUuid = get_az_external_subnet_uuid(az_pc_ip,az_pc_username,az_pc_password,externalSubnetName)\nvmNicUuid = getVmNicUuid(az_pc_ip,az_pc_username,az_pc_password,vmName)\n\nprint(\"AZ1_Jumphost_FloatingIP={}\".format(assignFloatingIp(az_pc_ip,az_pc_username,az_pc_password,vmNicUuid,externalSubnetUuid)))\n\n","eval_variables":["AZ1_Jumphost_FloatingIP"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]}],"description":"","name":"bbbe7d7c_runbook_cloned_1_cloned_0","main_task_local_reference":{"kind":"app_task","name":"b6d05f1d_dag_cloned_1_cloned_1"},"variable_list":[]},"name":"action_create"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ1 Jumphost"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"636c583d_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"ac8f5c3b_runbook_cloned_1_cloned_0","main_task_local_reference":{"kind":"app_task","name":"636c583d_dag_cloned_1_cloned_1"},"variable_list":[]},"name":"action_delete"},{"description":"System action for starting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ1 Jumphost"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"6b8c1340_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"8767addb_runbook_cloned_1_cloned_0","main_task_local_reference":{"kind":"app_task","name":"6b8c1340_dag_cloned_1_cloned_1"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ1 Jumphost"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"485b3eb2_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"63d486da_runbook_cloned_1_cloned_0","main_task_local_reference":{"kind":"app_task","name":"485b3eb2_dag_cloned_1_cloned_1"},"variable_list":[]},"name":"action_stop"},{"description":"System action for restarting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ1 Jumphost"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"26a25523_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"16b59222_runbook_cloned_1_cloned_0","main_task_local_reference":{"kind":"app_task","name":"26a25523_dag_cloned_1_cloned_1"},"variable_list":[]},"name":"action_restart"}],"depends_on_list":[{"kind":"app_service","name":"API Tasks"}],"name":"AZ1 Jumphost","port_list":[],"tier":"","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"AZ1_Jumphost_FloatingIP","value":"","label":"","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}}],"description":""},{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ2 Jumphost"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Floating IP AZ2"}],"name":"b6d05f1d_dag_cloned_1_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AZ2 Jumphost"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Set Floating IP AZ2","attrs":{"exit_status":[],"script":"def get_az_external_subnet_uuid(az_pc_ip,az_pc_username,az_pc_password,external_subnet_name):\n  api_url = 'https:\/\/' + az_pc_ip + ':9440\/api\/nutanix\/v3\/subnets\/list'\n  headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n  \n  payload = {\n      'kind': 'subnet'\n  }\n  \n  r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\" ,user=az_pc_username, passwd=az_pc_password)\n  if r.ok:\n    resp = json.loads(r.content)\n  else:\n    print(\"Function get_az_external_subnet_uuid Post Request Failed\", r.content)\n    exit(1)\n  \n  for subnet in resp['entities']:\n    if subnet['spec']['name'] == external_subnet_name:\n      #print(subnet['metadata']['uuid'])\n      return subnet['metadata']['uuid']\n\ndef getVmNicUuid(AzPC_IP,username,password,vmName):\n    api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/vms\/list'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n    payload = {\n        \"kind\": \"vm\",\n        \"filter\": \"vm_name=={}\".format(vmName)\n    }\n\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n    if r.ok:\n        resp = json.loads(r.content)\n        print(resp['entities'][0]['status']['resources']['nic_list'][0]['uuid'])\n        return resp['entities'][0]['status']['resources']['nic_list'][0]['uuid']\n      \ndef assignFloatingIp(AzPC_IP,username,password,vmNicUuid,VpcExternal_subnet_reference):\n\n    api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/floating_ips'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n    payload = {\n        \"spec\": {\n            \"resources\": {\n                \"vm_nic_reference\": {\n                    \"kind\": \"vm_nic\",\n                    \"uuid\": vmNicUuid\n                },\n                \"external_subnet_reference\": {\n                    \"kind\": \"subnet\",\n                    \"uuid\": VpcExternal_subnet_reference\n                }\n            }\n        },\n        \"api_version\": \"3.1.0\",\n        \"metadata\": {\n            \"kind\": \"floating_ip\"\n        }\n    }\n    \n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n    if r.ok:\n        resp = json.loads(r.content)\n        task_uuid = resp['status']['execution_context']['task_uuid']\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n\n    state = \"\"\n    while state != \"SUCCEEDED\":\n        api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/tasks\/{}'.format(task_uuid)\n\n        sleep(2)\n        r = urlreq(api_url, verb='GET', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n        if r.ok:\n            resp = json.loads(r.content)\n            state = resp['status']\n            print(resp)\n            if state == \"FAILED\":\n                print(\"Task failed\", resp['progress_message'])\n                exit(1)\n\n        else:\n            print(\"Post request failed\", r.content)\n            exit(1)\n    \n    floatingIpUuid = resp['entity_reference_list'][0]['uuid']\n\n    api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/floating_ips\/{}'.format(floatingIpUuid)\n\n    r = urlreq(api_url, verb='GET', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n    if r.ok:\n        resp = json.loads(r.content)\n        floatingIpAddress = resp['status']['resources']['floating_ip']\n        return floatingIpAddress\n      \n      \n      \n\naz_pc_ip = \"@@{AZ2_PC_IP}@@\"\naz_pc_username = \"@@{AZ2_PC_CREDENTIALS.username}@@\"\naz_pc_password = \"@@{AZ2_PC_CREDENTIALS.secret}@@\"\nexternalSubnetName = \"@@{AZ2_VPC_EXTERNAL_SUBNET_NAME}@@\"\nvmName = \"@@{name}@@\"\nexternalSubnetUuid = get_az_external_subnet_uuid(az_pc_ip,az_pc_username,az_pc_password,externalSubnetName)\nvmNicUuid = getVmNicUuid(az_pc_ip,az_pc_username,az_pc_password,vmName)\n\nprint(\"AZ2_Jumphost_FloatingIP={}\".format(assignFloatingIp(az_pc_ip,az_pc_username,az_pc_password,vmNicUuid,externalSubnetUuid)))\n\n","eval_variables":["AZ2_Jumphost_FloatingIP"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]}],"description":"","name":"bbbe7d7c_runbook_cloned_1_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"b6d05f1d_dag_cloned_1_cloned_1_cloned_1"},"variable_list":[]},"name":"action_create"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ2 Jumphost"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"636c583d_dag_cloned_1_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"ac8f5c3b_runbook_cloned_1_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"636c583d_dag_cloned_1_cloned_1_cloned_1"},"variable_list":[]},"name":"action_delete"},{"description":"System action for starting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ2 Jumphost"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"6b8c1340_dag_cloned_1_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"8767addb_runbook_cloned_1_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"6b8c1340_dag_cloned_1_cloned_1_cloned_1"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ2 Jumphost"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"485b3eb2_dag_cloned_1_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"63d486da_runbook_cloned_1_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"485b3eb2_dag_cloned_1_cloned_1_cloned_1"},"variable_list":[]},"name":"action_stop"},{"description":"System action for restarting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ2 Jumphost"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"26a25523_dag_cloned_1_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"16b59222_runbook_cloned_1_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"26a25523_dag_cloned_1_cloned_1_cloned_1"},"variable_list":[]},"name":"action_restart"}],"depends_on_list":[{"kind":"app_service","name":"API Tasks"}],"name":"AZ2 Jumphost","port_list":[],"tier":"","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"AZ2_Jumphost_FloatingIP","value":"","label":"","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}}],"description":""},{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ3 Jumphost"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Floating IP AZ3"}],"name":"b6d05f1d_dag_cloned_1_cloned_1_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"AZ3 Jumphost"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Set Floating IP AZ3","attrs":{"exit_status":[],"script":"def get_az_external_subnet_uuid(az_pc_ip,az_pc_username,az_pc_password,external_subnet_name):\n  api_url = 'https:\/\/' + az_pc_ip + ':9440\/api\/nutanix\/v3\/subnets\/list'\n  headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n  \n  payload = {\n      'kind': 'subnet'\n  }\n  \n  r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\" ,user=az_pc_username, passwd=az_pc_password)\n  if r.ok:\n    resp = json.loads(r.content)\n  else:\n    print(\"Function get_az_external_subnet_uuid Post Request Failed\", r.content)\n    exit(1)\n  \n  for subnet in resp['entities']:\n    if subnet['spec']['name'] == external_subnet_name:\n      #print(subnet['metadata']['uuid'])\n      return subnet['metadata']['uuid']\n\ndef getVmNicUuid(AzPC_IP,username,password,vmName):\n    api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/vms\/list'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n    payload = {\n        \"kind\": \"vm\",\n        \"filter\": \"vm_name=={}\".format(vmName)\n    }\n\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n    if r.ok:\n        resp = json.loads(r.content)\n        print(resp['entities'][0]['status']['resources']['nic_list'][0]['uuid'])\n        return resp['entities'][0]['status']['resources']['nic_list'][0]['uuid']\n      \ndef assignFloatingIp(AzPC_IP,username,password,vmNicUuid,VpcExternal_subnet_reference):\n\n    api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/floating_ips'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n    payload = {\n        \"spec\": {\n            \"resources\": {\n                \"vm_nic_reference\": {\n                    \"kind\": \"vm_nic\",\n                    \"uuid\": vmNicUuid\n                },\n                \"external_subnet_reference\": {\n                    \"kind\": \"subnet\",\n                    \"uuid\": VpcExternal_subnet_reference\n                }\n            }\n        },\n        \"api_version\": \"3.1.0\",\n        \"metadata\": {\n            \"kind\": \"floating_ip\"\n        }\n    }\n    \n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n    if r.ok:\n        resp = json.loads(r.content)\n        task_uuid = resp['status']['execution_context']['task_uuid']\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n\n    state = \"\"\n    while state != \"SUCCEEDED\":\n        api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/tasks\/{}'.format(task_uuid)\n\n        sleep(2)\n        r = urlreq(api_url, verb='GET', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n        if r.ok:\n            resp = json.loads(r.content)\n            state = resp['status']\n            print(resp)\n            if state == \"FAILED\":\n                print(\"Task failed\", resp['progress_message'])\n                exit(1)\n\n        else:\n            print(\"Post request failed\", r.content)\n            exit(1)\n    \n    floatingIpUuid = resp['entity_reference_list'][0]['uuid']\n\n    api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/floating_ips\/{}'.format(floatingIpUuid)\n\n    r = urlreq(api_url, verb='GET', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n    if r.ok:\n        resp = json.loads(r.content)\n        floatingIpAddress = resp['status']['resources']['floating_ip']\n        return floatingIpAddress\n      \n      \n      \n\naz_pc_ip = \"@@{AZ3_PC_IP}@@\"\naz_pc_username = \"@@{AZ3_PC_CREDENTIALS.username}@@\"\naz_pc_password = \"@@{AZ3_PC_CREDENTIALS.secret}@@\"\nexternalSubnetName = \"@@{AZ3_VPC_EXTERNAL_SUBNET_NAME}@@\"\nvmName = \"@@{name}@@\"\nexternalSubnetUuid = get_az_external_subnet_uuid(az_pc_ip,az_pc_username,az_pc_password,externalSubnetName)\nvmNicUuid = getVmNicUuid(az_pc_ip,az_pc_username,az_pc_password,vmName)\n\nprint(\"AZ3_Jumphost_FloatingIP={}\".format(assignFloatingIp(az_pc_ip,az_pc_username,az_pc_password,vmNicUuid,externalSubnetUuid)))\n\n","eval_variables":["AZ3_Jumphost_FloatingIP"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]}],"description":"","name":"bbbe7d7c_runbook_cloned_1_cloned_0_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"b6d05f1d_dag_cloned_1_cloned_1_cloned_1_cloned_1"},"variable_list":[]},"name":"action_create"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ3 Jumphost"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"636c583d_dag_cloned_1_cloned_1_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"ac8f5c3b_runbook_cloned_1_cloned_0_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"636c583d_dag_cloned_1_cloned_1_cloned_1_cloned_1"},"variable_list":[]},"name":"action_delete"},{"description":"System action for starting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ3 Jumphost"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"6b8c1340_dag_cloned_1_cloned_1_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"8767addb_runbook_cloned_1_cloned_0_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"6b8c1340_dag_cloned_1_cloned_1_cloned_1_cloned_1"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ3 Jumphost"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"485b3eb2_dag_cloned_1_cloned_1_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"63d486da_runbook_cloned_1_cloned_0_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"485b3eb2_dag_cloned_1_cloned_1_cloned_1_cloned_1"},"variable_list":[]},"name":"action_stop"},{"description":"System action for restarting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"AZ3 Jumphost"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"26a25523_dag_cloned_1_cloned_1_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"16b59222_runbook_cloned_1_cloned_0_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"26a25523_dag_cloned_1_cloned_1_cloned_1_cloned_1"},"variable_list":[]},"name":"action_restart"}],"depends_on_list":[{"kind":"app_service","name":"API Tasks"}],"name":"AZ3 Jumphost","port_list":[],"tier":"","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"AZ3_Jumphost_FloatingIP","value":"","label":"","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}}],"description":""}],"substrate_definition_list":[{"description":"","action_list":[{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"APITasks"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"ApiTaskExecution"}],"name":"ec4c498f_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"APITasks"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"ApiTaskExecution","attrs":{"exit_status":[],"script":"#region Define Variables\naz1_pc_ip = '@@{AZ1_PC_IP}@@'\naz1_provider_account_name = '@@{AZ1_PROVIDER_NAME}@@'\naz1_pc_username = '@@{AZ1_PC_CREDENTIALS.username}@@'\naz1_pc_password = '@@{AZ1_PC_CREDENTIALS.secret}@@'\naz1_external_subnet_name = '@@{AZ1_VPC_EXTERNAL_SUBNET_NAME}@@'\naz1_vpc_common_service_poolRange = '@@{AZ1_COMMON_SERVICE_POOL_RANGE}@@'\naz1_vpc_tenant_DefaultSubnet_PoolRange ='@@{AZ1_USER_SUBNET_POOL_RANGE}@@'\n\naz2_pc_ip = '@@{AZ2_PC_IP}@@'\naz2_provider_account_name = '@@{AZ2_PROVIDER_NAME}@@'\naz2_pc_username = '@@{AZ2_PC_CREDENTIALS.username}@@'\naz2_pc_password = '@@{AZ2_PC_CREDENTIALS.secret}@@'\naz2_external_subnet_name = '@@{AZ2_VPC_EXTERNAL_SUBNET_NAME}@@'\naz2_vpc_common_service_poolRange = '@@{AZ2_COMMON_SERVICE_POOL_RANGE}@@'\naz2_vpc_tenant_DefaultSubnet_PoolRange ='@@{AZ2_USER_SUBNET_POOL_RANGE}@@'\n\naz3_pc_ip = '@@{AZ3_PC_IP}@@'\naz3_provider_account_name = '@@{AZ3_PROVIDER_NAME}@@'\naz3_pc_username = '@@{AZ3_PC_CREDENTIALS.username}@@'\naz3_pc_password = '@@{AZ3_PC_CREDENTIALS.secret}@@'\naz3_external_subnet_name = '@@{AZ3_VPC_EXTERNAL_SUBNET_NAME}@@'\naz3_vpc_common_service_poolRange = '@@{AZ3_COMMON_SERVICE_POOL_RANGE}@@'\naz3_vpc_tenant_DefaultSubnet_PoolRange ='@@{AZ3_USER_SUBNET_POOL_RANGE}@@'\n\ndefault_Linux_Image_Name = '@@{Default_Linux_Image_Name}@@'\ndefault_Windows_Image_Name = '@@{Default_Windows_Image_Name}@@'\n\nprojectName = '@@{TENANT_NAME}@@-Project'.lower()\n\nvpcName = '@@{TENANT_NAME}@@-vpc'.lower()\nvpc_common_service_subnetName = vpcName + \"CommonSvcSubnet\"\nvpc_common_service_subnetIp = '@@{COMMON_SERVICE_SUBNET_CIDR}@@'\nvpc_common_service_subnetMask = @@{COMMON_SERVICE_SUBNET_MASK}@@\nvpc_common_service_defaultGateway= '@@{COMMON_SERVICE_DEFAULT_GATEWAY}@@'\n\nvpc_tenant_subnetName = vpcName + \"DefaultTenantSubnet\"\nvpc_tenant_subnetIp = '@@{USER_SUBNET_CIDR}@@'\nvpc_tenant_subnetMask = @@{USER_SUBNET_MASK}@@\nvpc_tenant_defaultGateway = '@@{USER_SUBNET_GATEWAY}@@'\n\ndefaultNetworkName = \"Internal VLAN 103\"\n\ndnsServer = '@@{DNS_SERVER}@@'\nblueprintIdentifier = '@@{blueprintIdentifier}@@'\n\nROLE_ADMIN = '@@{ROLE_ADMIN}@@'\nDOMAIN = '@@{DOMAIN}@@'\nROOT_OU = '@@{ROOT_OU}@@'\nTenant_Admin_UPN = '@@{Tenant_Admin_UPN}@@'\nDirectoryServiceName = \"@@{DirectoryServiceName}@@\"\n\njwt = '@@{calm_jwt}@@' #uses the JWT Token of the CalmVM Instance. Coz the Project COnstructs are hosted within CalmVM\n\n#endregion\n\n#region Define commonly use functions\ndef convert_domain_to_ad_path(domain, root_ou):\n    path = ''\n    if domain[len(domain)-1:] != '.':\n        domain = domain + '.'\n    \n    while domain.find('.') >= 0:\n        x = domain.find('.')\n        path = path + ',DC={}'.format(domain[:x])\n        domain = domain[x+1:]\n    \n    return '{},{}'.format(root_ou, path[1:])\n\ndef get_role_uuid(role_name):\n  api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/roles\/list'\n  headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n  payload = {\n      'filter': 'name=={}'.format(role_name),\n      'kind': 'role',\n      'offset': 0\n  }\n  r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False)\n  result = json.loads(r.content)\n  if result['entities']:\n      return result['entities'][0]['metadata']['uuid']\n  else:\n      return None\n\ndef createAdminGroup(AD_PATH,adProjectAdminGroupCN):\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/user_groups'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n    payload = {\n        \"spec\": {\n            \"resources\": {\n                \"directory_service_user_group\": {\n                    \"distinguished_name\": \"cn={},OU={}\".format(adProjectAdminGroupCN,AD_PATH)\n                }\n            }\n        },\n        \"metadata\": {\n            \"kind\": \"user_group\"\n        }\n    }\n    print(payload)\n\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        print(resp)\n        #print(\"GROUP_ADMIN_UUID={}\".format(resp['metadata']['uuid']))\n        return resp['metadata']['uuid']\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n\ndef get_directory_service_uuid(directoryServiceName):\n    \n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/directory_services\/list'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n\n    payload = {}\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        #print(resp)\n    else:\n        print(\"Get DirectoryService Failed\", r.content)\n\n    for entity in resp['entities']:\n        if entity['spec']['name'] == directoryServiceName:\n            returnPayload = {\n                \"kind\": \"directory_service\",\n                \"uuid\": \"{}\".format(entity['metadata']['uuid'])\n            }\n            return returnPayload\n\n    print(\"No such directory services entity \", directoryServiceName)\n\ndef createUser(userPrincipalName,DirectoryServiceJson):\n    \n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/users\/list'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n\n    payload ={\n        \"filter\": \"user_principal_name=={}\".format(userPrincipalName)\n    }\n\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        if resp['metadata']['total_matches'] == 1:\n            print(\"found user\", resp['entities'][0]['status']['name'])\n            return resp['entities'][0]['metadata']['uuid']\n            \n        else:\n            api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/users'\n    else:\n        print(\"Failed to post request for users\")\n\n\n    payload = {\n        \"spec\": {\n            \"resources\": {\n                \"directory_service_user\": {\n                    \"user_principal_name\": \"{}\".format(userPrincipalName),\n                    \"directory_service_reference\": DirectoryServiceJson\n                }\n            }\n        },\n        \"api_version\": \"3.1.0\",\n        \"metadata\": {\n            \"kind\": \"user\",\n            \"entity_version\": \"string\"\n        }\n    }\n\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        print(\"Created User\")\n        return resp['metadata']['uuid']\n\ndef get_az_external_subnet_uuid(az_pc_ip,az_pc_username,az_pc_password,external_subnet_name):\n  api_url = 'https:\/\/' + az_pc_ip + ':9440\/api\/nutanix\/v3\/subnets\/list'\n  headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n  \n  payload = {\n      'kind': 'subnet'\n  }\n  \n  r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\" ,user=az_pc_username, passwd=az_pc_password)\n  if r.ok:\n    resp = json.loads(r.content)\n  else:\n    print(\"Function get_az_external_subnet_uuid Post Request Failed\", r.content)\n    exit(1)\n  \n  for subnet in resp['entities']:\n    if subnet['spec']['name'] == external_subnet_name:\n      #print(subnet['metadata']['uuid'])\n      return subnet['metadata']['uuid']\n  \ndef get_image_uuid(az_pc_ip,az_pc_username,az_pc_password,image_name):\n  api_url = 'https:\/\/' + az_pc_ip + ':9440\/api\/nutanix\/v3\/images\/list'\n  headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n  \n  payload = {\n      'kind': 'image',\n      'filter': 'name=={}'.format(image_name)\n  }\n  \n  r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\" ,user=az_pc_username, passwd=az_pc_password)\n  if r.ok:\n    resp = json.loads(r.content)\n  else:\n    print(\"Function get_image_uuid Post Request Failed\", r.content)\n    exit(1)\n  \n  for image in resp['entities']:\n    if image['spec']['name'] == image_name:\n      return image['metadata']['uuid']\n\ndef createVPC(AzPC_IP,username,password,VpcName,ExternalSubnetUUID,DnsServer):\n\n    api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/vpcs'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n    payload = {\n        \"spec\": {\n            \"name\": VpcName,\n            \"resources\": {\n                \"common_domain_name_server_ip_list\":[{\n                    \"ip\": DnsServer\n                }],\n                \"external_subnet_list\": [{\n                    \"external_subnet_reference\": {\n                        \"kind\": \"subnet\",\n                        \"uuid\": ExternalSubnetUUID\n                    }\n                }]\n            }\n        },\n        \"metadata\": {\n            \"kind\": \"vpc\"\n        },\n        \"api_version\": \"3.1.0\"\n    }\n\n\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n    if r.ok:\n        resp = json.loads(r.content)\n        task_uuid = resp['status']['execution_context']['task_uuid']\n        #print(\"Function createVPC Post request Success\", r.content)\n\n    else:\n        print(\"Function createVPC Post request failed\", r.content)\n        exit(1)\n\n\n    state = \"\"\n    while state != \"SUCCEEDED\":\n        api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/tasks\/{}'.format(task_uuid)\n\n        sleep(2)\n        r = urlreq(api_url, verb='GET', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n        if r.ok:\n            resp = json.loads(r.content)\n            state = resp['status']\n            if state == \"FAILED\":\n                print(\"Task failed\", resp['progress_message'])\n                exit(1)\n\n        else:\n            print(\"Function createVPC Task Poll Post request failed\", r.content)\n            exit(1)\n    return resp['entity_reference_list'][0]['uuid']\n\ndef createVpcSubnet(AzPC_IP,username,password,vpc_uuid,VpcSubnetName,NewSubnetCIDR,NewSubnetMask,NewSubnetGateway,vpcSubnetPoolRange):\n    api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/subnets'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n    payload = {\n        \"spec\": {\n            \"name\": VpcSubnetName,\n            \"resources\": {\n                \"subnet_type\": \"OVERLAY\",\n                \"vpc_reference\": {\n                    \"kind\": \"vpc\",\n                    \"uuid\": vpc_uuid\n                },\n                \"ip_config\": {\n                    \"subnet_ip\": NewSubnetCIDR,\n                    \"prefix_length\": NewSubnetMask,\n                    \"default_gateway_ip\": NewSubnetGateway,\n                    \"pool_list\": [{\n                        \"range\": vpcSubnetPoolRange\n                    }]\n                }\n            }\n        },\n        \"metadata\": {\n            \"kind\": \"subnet\"\n        },\n        \"api_version\": \"3.1.0\"\n    }\n\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n    if r.ok:\n        resp = json.loads(r.content)\n        task_uuid = resp['status']['execution_context']['task_uuid']\n\n    else:\n        print(\"Function createVpcSubnet Post request failed\", r.content)\n        exit(1)\n        \n    state = \"\"\n    while state != \"SUCCEEDED\":\n        api_url = 'https:\/\/' + AzPC_IP + ':9440\/api\/nutanix\/v3\/tasks\/{}'.format(task_uuid)\n\n        sleep(2)\n        r = urlreq(api_url, verb='GET', headers=headers, verify=False, auth=\"BASIC\", user=username, passwd=password)\n        if r.ok:\n            resp = json.loads(r.content)\n            state = resp['status']\n            if state == \"FAILED\":\n                print(\"Task failed\", resp['progress_message'])\n                exit(1)\n\n        else:\n            print(\"Post request failed\", r.content)\n            exit(1)\n\n    return (resp['entity_reference_list'][0]['uuid'],VpcSubnetName)\n\ndef get_calmProviderAccountCloudAccountUUID(providerAccountName):\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/accounts\/list'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n\n    payload = {\n        \"kind\": \"account\",\n        \"filter\": \"state!=DELETED;state!=DRAFT;name=={}\".format(providerAccountName)\n    }\n\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False) \n    if r.ok:\n        resp = json.loads(r.content)\n        for account in resp['entities']:\n            if account['metadata']['name'] == providerAccountName:\n                return account['status']['resources']['data']['cluster_account_reference_list'][0]['uuid']\n\n    else:\n        print(\"Function calmProviderAccountList Post request failed\", r.content)\n        exit(1)\n\ndef get_calmProviderClusterUUID(providerAccountName):\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/accounts\/list'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n\n    payload = {\n        \"kind\": \"account\",\n        \"filter\": \"state!=DELETED;state!=DRAFT;name=={}\".format(providerAccountName)\n    }\n\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False) \n    if r.ok:\n        resp = json.loads(r.content)\n        for account in resp['entities']:\n            if account['metadata']['name'] == providerAccountName:\n                return account['status']['resources']['data']['cluster_account_reference_list'][0]['resources']['data']['cluster_uuid']\n\n    else:\n        print(\"Function calmProviderAccountList Post request failed\", r.content)\n        exit(1)\n\ndef get_calmProviderAccountUUID(providerAccountName):\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/accounts\/list'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n\n    payload = {\n        \"kind\": \"account\",\n        \"filter\": \"state!=DELETED;state!=DRAFT;name=={}\".format(providerAccountName)\n    }\n\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False) \n    if r.ok:\n        resp = json.loads(r.content)\n        for account in resp['entities']:\n            if account['metadata']['name'] == providerAccountName:\n                return account['status']['resources']['data']['cluster_account_reference_list'][0]['resources']['data']['pc_account_uuid']\n\n    else:\n        print(\"Function calmProviderAccountList Post request failed\", r.content)\n        exit(1)\n\ndef get_calmProviderPcPeMapUuuid(providerAccountName):\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/accounts\/list'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n\n    payload = {\n        \"kind\": \"account\",\n        \"filter\": \"state==VERIFIED;name=={}\".format(providerAccountName)\n    }\n\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False) \n    if r.ok:\n        resp = json.loads(r.content)\n        for account in resp['entities']:\n            if account['metadata']['name'] == providerAccountName:\n                return account['status']['resources']['data']['cluster_account_reference_list'][0]['uuid']\n\n    else:\n        print(\"Function get_calmProviderPcPeMapUuuid Post request failed\", r.content)\n        exit(1)\n\ndef get_PcAccountUUID(_account_name):\n  api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/accounts\/list'\n  headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n\n  payload = {\n      \"kind\": \"account\",\n       \"filter\": \"state!=DELETED;state!=DRAFT;name=={}\".format(_account_name)\n  }\n  \n  r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False)\n  if r.ok:\n      resp = json.loads(r.content)\n      for account in resp['entities']:\n        if account['metadata']['name'] == _account_name:\n            return account['metadata']['uuid']\n  else:\n      print(\"Function get_PcAccountUUID Post request failed\", r.content)\n      exit(1)\n\ndef createProjectv3(projectName,ProjectAdminUserUPN,ProjectAdminUserUuid,_externalNetworkList,_externalNetworkName,_vpcSubnetList,_accountReferenceList,_clusterReferenceList,_vpcReferenceList): \n        \n\n    userReferenceListJson = {\n        \"name\": \"{}\".format(ProjectAdminUserUPN),\n        \"kind\": \"user\",\n        \"uuid\": \"{}\".format(ProjectAdminUserUuid)\n    }\n    #Contains the subnet UUIDs and Names of VPC Subnets and VLAN Backed Subnets to be added into Project. use https:\/\/PC_IP:9440\/api\/nutanix\/v3\/subnets\/list with filters to find the correct UUID and Name\n    externalNetworkList = []\n    for extNet in _externalNetworkList:\n        externalNetworkListJson = {\n            \"uuid\": extNet,\n            \"name\": _externalNetworkName\n        }\n        #externalNetworkList.append(externalNetworkListJson)\n    #print(externalNetworkList)\n    \n    #parse the _vpcSubnetList and populate the vpcSubnetRefJson. then add the entries into externalNetworkList.\n    for vpcSubnetRef in _vpcSubnetList:\n        vpcSubnetRefJson = {\n            \"uuid\": vpcSubnetRef['uuid'],\n            \"name\": vpcSubnetRef['name']\n        }\n        externalNetworkList.append(vpcSubnetRefJson)\n    print(externalNetworkList)\n\n    #Contains the Account aka (Provider) UUIDs of Prism Central or CalmVM to be added into Project. use https:\/\/172.16.103.10:9440\/api\/nutanix\/v3\/accounts\/list with filters to find the correct UUID and Name\n    accountReferenceList = []\n    for accRef in _accountReferenceList:\n        accountReferenceListJson = {\n            \"kind\": \"account\",\n            \"uuid\": accRef\n        }\n        accountReferenceList.append(accountReferenceListJson)\n\n    #Contains the Clusters within an Account(s) aka (Provider(s)) UUIDs to be added into Project. use https:\/\/172.16.103.10:9440\/api\/nutanix\/v3\/accounts\/list with filters to find the correct UUID and Name\n    clusterReferenceList = []\n    for clusterRef in _clusterReferenceList:\n        clusterReferenceListJson = {\n            \"kind\": \"cluster\",\n            \"uuid\": clusterRef\n        }\n        clusterReferenceList.append(clusterReferenceListJson)\n\n    vpcReferenceList = []\n    for vpcRef in _vpcReferenceList:\n        vpcReferenceListJson = {\n            \"kind\": \"vpc\",\n            \"uuid\": vpcRef\n        }\n        vpcReferenceList.append(vpcReferenceListJson)\n\n\n\n\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/projects_internal'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n\n    payload = {\n    \"spec\": {\n        \"access_control_policy_list\": [],\n        \"project_detail\": {\n        \"name\": \"{}\".format(projectName),\n        \"resources\": {\n            \"external_network_list\": externalNetworkList,\n            \"account_reference_list\": accountReferenceList,\n            \"user_reference_list\": [userReferenceListJson],\n            \"external_user_group_reference_list\": [],\n            \"subnet_reference_list\": [],\n            \"cluster_reference_list\": clusterReferenceList,\n            \"vpc_reference_list\": vpcReferenceList\n        }\n        },\n        \"user_list\": [],\n        \"user_group_list\": []\n    },\n    \"api_version\": \"3.1\",\n    \"metadata\": {\n        \"categories_mapping\": {},\n        \"kind\": \"project\",\n        \"categories\": {}\n        \n    }\n    }\n    #print(payload)\n\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False)    \n    if r.ok:\n        resp = json.loads(r.content)\n        task_uuid = resp['status']['execution_context']['task_uuid']\n\n    else:\n        print(\"Function createProject Post request failed\", r.content)\n        exit(1)\n\n    state = \"\"\n    while state != \"SUCCEEDED\":\n        api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/tasks\/{}'.format(task_uuid)\n\n        sleep(2)\n        r = urlreq(api_url, verb='GET', headers=headers, verify=False)\n        if r.ok:\n            resp = json.loads(r.content)\n            state = resp['status']\n            if state == \"FAILED\":\n                print(\"Task failed\", resp['progress_message'])\n                exit(1)\n\n        else:\n            print(\"Post request failed\", r.content)\n            exit(1)\n\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/projects\/{}'.format(resp['entity_reference_list'][0]['uuid'])\n\n    r = urlreq(api_url, verb='GET', headers=headers, verify=False)\n    if r.ok:\n        print(\"Function CreateProject successfully executed\")\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n\n\n    return resp['entity_reference_list'][0]['uuid']\n\ndef get_projectName(uuid):\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/projects\/{}'.format(uuid)\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n    payload = {\n        \"kind\": \"project\"\n    }\n\n    r = urlreq(api_url, verb='GET', params=json.dumps(payload), headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        return resp['status']['name']\n\n    else:\n        print(\"Function get_PcAccountUUID Post request failed\", r.content)\n        exit(1)\n\n\ndef createEnvrionmentV2(AzNumber,_projectUuid,_providerAccountClusterUuid,_providerAccountPcUuid,_vpcSubnetList,_vpcUuid,_providerAccountPcPeMapUuid,_defaultWindowsImageName,_defaultWindowsImageUuid,_defaultLinuxImageName,_defaultLinuxImageUuid):\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/environments'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n\n    #SubnetReferences to be assocated with the Environment. Can either be a VPC Subnet or a VLAN Backed Subnet. Using VPC Subnets for this example First Entry if there are multiple entries will be used as the default Subnet\n    vpcSubnetReferences = []\n    subnetRefJson = {\n        \"uuid\": _vpcSubnetList\n    }\n    vpcSubnetReferences.append(subnetRefJson)\n\n    print(\"passed VPC\")\n    linuxAppCredentialUuid = uuid.uuid4()\n    windowsAppCredentialUuid = uuid.uuid4()\n    envUuid = uuid.uuid4()\n\n    payload =   {\n      \"spec\": {\n        \"name\": \"AZ{}-Env-{}\".format(AzNumber,envUuid),\n        \"resources\": {\n          \"infra_inclusion_list\": [\n            {\n              \"cluster_references\": [\n                {\n                  \"uuid\": \"{}\".format(_providerAccountClusterUuid)\n                }\n              ],\n              \"default_subnet_reference\": {\n                \"uuid\": \"{}\".format(_vpcSubnetList)\n              },\n              \"account_reference\": {\n                \"kind\": \"account\",\n                \"uuid\": \"{}\".format(_providerAccountPcUuid)\n              },\n              \"vpc_references\": [\n                {\n                  \"uuid\": \"{}\".format(_vpcUuid)\n                }\n              ],\n              \"subnet_references\": vpcSubnetReferences,\n              \"type\": \"nutanix_pc\"\n            }\n          ],\n          \"substrate_definition_list\": [\n            {\n              \"uuid\": \"{}\".format(uuid.uuid4()),\n              \"action_list\": [],\n              \"readiness_probe\": {\n                \"connection_type\": \"POWERSHELL\",\n                \"retries\": \"5\",\n                \"connection_protocol\": \"http\",\n                \"disable_readiness_probe\": False,\n                \"delay_secs\": \"180\",\n                \"connection_port\": 5985,\n                \"login_credential_local_reference\": {\n                  \"kind\": \"app_credential\",\n                  \"uuid\": \"{}\".format(windowsAppCredentialUuid)\n                }\n              },\n              \"os_type\": \"Windows\",\n              \"type\": \"AHV_VM\",\n              \"create_spec\": {\n                \"resources\": {\n                  \"nic_list\": [\n                    {\n                      \"ip_endpoint_list\": [],\n                      \"subnet_reference\": {\n                        \"uuid\": \"{}\".format(_vpcSubnetList)\n                      },\n                      \"vpc_reference\": {\n                        \"uuid\": \"{}\".format(_vpcUuid)\n                      }\n                    }\n                  ],\n                  \"num_vcpus_per_socket\": 1,\n                  \"num_sockets\": 1,\n                  \"memory_size_mib\": 1024,\n                  \"boot_config\": {\n                    \"boot_device\": {\n                      \"disk_address\": {\n                        \"device_index\": 0,\n                        \"adapter_type\": \"SCSI\"\n                      }\n                    },\n                    \"boot_type\": \"LEGACY\"\n                  },\n                  \"account_uuid\": \"{}\".format(_providerAccountPcPeMapUuid),\n                  \"disk_list\": [\n                    {\n                      \"data_source_reference\": {\n                        \"kind\": \"image\",\n                        \"name\": \"{}\".format(_defaultWindowsImageName),\n                        \"uuid\": \"{}\".format(_defaultWindowsImageUuid)\n                      },\n                      \"device_properties\": {\n                        \"disk_address\": {\n                          \"device_index\": 0,\n                          \"adapter_type\": \"SCSI\"\n                        },\n                        \"device_type\": \"DISK\"\n                      }\n                    }\n                  ]\n                },\n                \"name\": \"vm-@@{calm_array_index}@@-@@{calm_time}@@\",\n                \"categories\": {},\n                \"cluster_reference\": {\n                  \"uuid\": \"{}\".format(_providerAccountClusterUuid)\n                }\n              },\n              \"variable_list\": [],\n              \"name\": \"Untitled\"\n            },\n            {\n              \"uuid\": \"{}\".format(uuid.uuid4()),\n              \"action_list\": [],\n              \"readiness_probe\": {\n                \"connection_type\": \"SSH\",\n                \"retries\": \"5\",\n                \"connection_protocol\": \"\",\n                \"disable_readiness_probe\": False,\n                \"delay_secs\": \"20\",\n                \"connection_port\": 22,\n                \"login_credential_local_reference\": {\n                  \"kind\": \"app_credential\",\n                  \"uuid\": \"{}\".format(linuxAppCredentialUuid)\n                }\n              },\n              \"os_type\": \"Linux\",\n              \"type\": \"AHV_VM\",\n              \"create_spec\": {\n                \"resources\": {\n                  \"nic_list\": [\n                    {\n                      \"ip_endpoint_list\": [],\n                      \"subnet_reference\": {\n                        \"uuid\": \"{}\".format(_vpcSubnetList)\n                      },\n                      \"vpc_reference\": {\n                        \"uuid\": \"{}\".format(_vpcUuid)\n                      }\n                    }\n                  ],\n                  \"num_vcpus_per_socket\": 1,\n                  \"num_sockets\": 1,\n                  \"memory_size_mib\": 1024,\n                  \"boot_config\": {\n                    \"boot_device\": {\n                      \"disk_address\": {\n                        \"device_index\": 0,\n                        \"adapter_type\": \"SCSI\"\n                      }\n                    },\n                    \"boot_type\": \"LEGACY\"\n                  },\n                  \"account_uuid\": \"{}\".format(_providerAccountPcPeMapUuid),\n                  \"disk_list\": [\n                    {\n                      \"data_source_reference\": {\n                        \"kind\": \"image\",\n                        \"name\": \"{}\".format(_defaultLinuxImageName),\n                        \"uuid\": \"{}\".format(_defaultLinuxImageUuid)\n                      },\n                      \"device_properties\": {\n                        \"disk_address\": {\n                          \"device_index\": 0,\n                          \"adapter_type\": \"SCSI\"\n                        },\n                        \"device_type\": \"DISK\"\n                      }\n                    }\n                  ]\n                },\n                \"name\": \"vm-@@{calm_array_index}@@-@@{calm_time}@@\",\n                \"categories\": {},\n                \"cluster_reference\": {\n                  \"uuid\": \"{}\".format(_providerAccountClusterUuid)\n                }\n              },\n              \"variable_list\": [],\n              \"name\": \"Untitled\"\n            }\n          ],\n          \"credential_definition_list\": [\n            {\n              \"username\": \".\\\\administrator\",\n              \"uuid\": \"{}\".format(windowsAppCredentialUuid),\n              \"secret\": {\n                \"attrs\": {\n                  \"is_secret_modified\": True\n                },\n                \"value\": \"ntnx\/4DSTA\"\n              },\n              \"cred_class\": \"static\",\n              \"type\": \"PASSWORD\",\n              \"name\": \"Windows_Local_Admin\"\n            },\n            {\n              \"username\": \"root\",\n              \"uuid\": \"{}\".format(linuxAppCredentialUuid),\n              \"secret\": {\n                \"attrs\": {\n                  \"is_secret_modified\": True\n                },\n                \"value\": \"nutanix\/4u\"\n              },\n              \"cred_class\": \"static\",\n              \"type\": \"PASSWORD\",\n              \"name\": \"Linux_Root\"\n            }\n          ]\n        },\n        \"description\": \"\"\n      },\n      \"api_version\": \"3.0\",\n      \"metadata\": {\n        \"kind\": \"environment\",\n        \"uuid\": \"{}\".format(envUuid),\n        \"project_reference\": {\n          \"kind\": \"project\",\n          \"uuid\": \"{}\".format(_projectUuid)\n        }\n      }\n    }\n\n    print(payload)\n\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        #print(resp['status']['uuid'])\n        print(\"AZ Environment Successfully Created\")\n        return resp['status']['uuid']\n\n    else:\n        print(\"Post request failed\", json.loads(r.content))\n        print(\"Payload\", json.dumps(payload))\n        exit(1)\n\ndef associateEnvWithProject(envUuid,projUuid):\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/projects_internal\/{}'.format(projUuid)\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n    \n    r = urlreq(api_url, verb='GET', headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        payload = resp\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n        \n    environment = {\n        \"kind\": \"environment\",\n        \"uuid\": \"{}\".format(envUuid)\n    }\n    del payload['status']\n\n    payload['spec']['project_detail']['resources']['environment_reference_list'] = [] ## what if there is another existing env?\n    payload['spec']['project_detail']['resources']['environment_reference_list'].append(environment)\n\n    r = urlreq(api_url, verb='PUT', params=json.dumps(payload), headers=headers, verify=False)\n    if r.ok:\n        print(\"Successfully associated Environments with Project\")\n\n    else:\n        print(\"Function associateEnvWithProject failed\", r.content)\n        exit(1)\n\ndef get_publishedBlueprints(blueprintPrefix):\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/calm_marketplace_items\/list'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n    payload = {\n        \"kind\": \"marketplace_item\",\n        \"filter\": \"app_state==PUBLISHED\"\n    }\n    #print(payload)\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False)\n    result = json.loads(r.content)\n    publishedBlueprints = []\n    for i in result['entities']:\n        if blueprintPrefix in i['status']['description']:\n            publishedBlueprints.append(\n                {\n                    'uuid': i['metadata']['uuid'],\n                    'name': i['metadata']['name']\n                }\n            )\n    \n    return publishedBlueprints\n\ndef publish_blueprint(blueprint_uuid, project_uuid, project_name):\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/calm_marketplace_items\/{}'.format(blueprint_uuid)\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n    payload={}\n    r = urlreq(api_url, verb='GET', params=json.dumps(payload), headers=headers, verify=False)\n    blueprint = json.loads(r.content)\n    del blueprint['status']\n    \n\n    blueprint['spec']['resources']['project_reference_list'].append({\n        'kind': 'project',\n        'name': project_name,\n        'uuid': project_uuid\n    })\n\n    #print(blueprint)\n    \n\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/calm_marketplace_items\/{}'.format(blueprint_uuid)\n    result = urlreq(api_url, verb='PUT', params=json.dumps(blueprint), headers=headers, verify=False)\n    #print(result)\n    if result:\n        return True\n    else:\n        return False\n\ndef calmCreateTunnel(tunnelName):\n    api_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/tunnels'\n    headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n\n    payload={\n        \"api_version\": \"3.0\",\n        \"metadata\": {\n            \"kind\": \"tunnel\"\n        },\n        \"spec\": {\n            \"resources\": {\n                \"created_by\": \"admin\"\n            },\n            \"name\": \"{}\".format(tunnelName)\n        }\n    }\n\n    r = urlreq(api_url, verb='POST', params=json.dumps(payload), headers=headers, verify=False) \n\n    if r.ok:\n        resp = json.loads(r.content)\n        respUuid = resp['metadata']['uuid']\n        respName = resp['metadata']['name']\n        return respUuid,respName\n\n#endregion\n\naz1_external_subnet_uuid = get_az_external_subnet_uuid(az1_pc_ip,az1_pc_username,az1_pc_password,az1_external_subnet_name) \naz2_external_subnet_uuid = get_az_external_subnet_uuid(az2_pc_ip,az2_pc_username,az2_pc_password,az2_external_subnet_name) \naz3_external_subnet_uuid = get_az_external_subnet_uuid(az3_pc_ip,az3_pc_username,az3_pc_password,az3_external_subnet_name)\nprint(\"AZ1_EXTERNAL_SUBNET_UUID={}\".format(az1_external_subnet_uuid))\nprint(\"AZ2_EXTERNAL_SUBNET_UUID={}\".format(az2_external_subnet_uuid))\nprint(\"AZ3_EXTERNAL_SUBNET_UUID={}\".format(az3_external_subnet_uuid))\n\naz1_linux_image_uuid = get_image_uuid(az1_pc_ip,az1_pc_username,az1_pc_password,default_Linux_Image_Name)\naz2_linux_image_uuid = get_image_uuid(az2_pc_ip,az2_pc_username,az2_pc_password,default_Linux_Image_Name) \naz3_linux_image_uuid = get_image_uuid(az3_pc_ip,az3_pc_username,az3_pc_password,default_Linux_Image_Name)\n#print(\"AZ1 Linux Image UUID: {}\".format(az1_linux_image_uuid))\n#print(\"AZ2 Linux Image UUID: {}\".format(az2_linux_image_uuid))\n#print(\"AZ3 Linux Image UUID: {}\".format(az3_linux_image_uuid))\n\naz1_windows_image_uuid = get_image_uuid(az1_pc_ip,az1_pc_username,az1_pc_password,default_Windows_Image_Name)\naz2_windows_image_uuid = get_image_uuid(az2_pc_ip,az2_pc_username,az2_pc_password,default_Windows_Image_Name) \naz3_windows_image_uuid = get_image_uuid(az3_pc_ip,az3_pc_username,az3_pc_password,default_Windows_Image_Name)\n#print(\"AZ1 Windows Image UUID: {}\".format(az1_windows_image_uuid))\n#print(\"AZ2 Windows Image UUID: {}\".format(az2_windows_image_uuid))\n#print(\"AZ3 Windows Image UUID: {}\".format(az3_windows_image_uuid))\n\n#Region execute\n\naz1_VPC_UUID = createVPC(az1_pc_ip,az1_pc_username,az1_pc_password,vpcName,az1_external_subnet_uuid,dnsServer)\naz2_VPC_UUID = createVPC(az2_pc_ip,az2_pc_username,az2_pc_password,vpcName,az2_external_subnet_uuid,dnsServer)\naz3_VPC_UUID = createVPC(az3_pc_ip,az3_pc_username,az3_pc_password,vpcName,az3_external_subnet_uuid,dnsServer)\n#print(\"AZ1 VPC UUID: {}\".format(az1_VPC_UUID))\n#print(\"AZ2 VPC UUID: {}\".format(az2_VPC_UUID))\n#print(\"AZ3 VPC UUID: {}\".format(az3_VPC_UUID))\nprint(\"AZ1_VPC_UUID={}\".format(az1_VPC_UUID))\nprint(\"AZ2_VPC_UUID={}\".format(az2_VPC_UUID))\nprint(\"AZ3_VPC_UUID={}\".format(az3_VPC_UUID))\n\nvpcUuidList = []\nvpcUuidList.append(az1_VPC_UUID)\nvpcUuidList.append(az2_VPC_UUID)\nvpcUuidList.append(az3_VPC_UUID)\n\naz1_svc_subnet_uuid = createVpcSubnet(az1_pc_ip,az1_pc_username,az1_pc_password,az1_VPC_UUID,\"az1\"+vpc_common_service_subnetName,vpc_common_service_subnetIp,vpc_common_service_subnetMask,vpc_common_service_defaultGateway,az1_vpc_common_service_poolRange)\naz2_svc_subnet_uuid = createVpcSubnet(az2_pc_ip,az2_pc_username,az2_pc_password,az2_VPC_UUID,\"az2\"+vpc_common_service_subnetName,vpc_common_service_subnetIp,vpc_common_service_subnetMask,vpc_common_service_defaultGateway,az2_vpc_common_service_poolRange)\naz3_svc_subnet_uuid = createVpcSubnet(az3_pc_ip,az3_pc_username,az3_pc_password,az3_VPC_UUID,\"az3\"+vpc_common_service_subnetName,vpc_common_service_subnetIp,vpc_common_service_subnetMask,vpc_common_service_defaultGateway,az3_vpc_common_service_poolRange)\n#print(\"AZ1 Service Subnet UUID: {}\".format(az1_svc_subnet_uuid))\n#print(\"AZ2 Service Subnet UUID: {}\".format(az2_svc_subnet_uuid))\n#print(\"AZ3 Service Subnet UUID: {}\".format(az3_svc_subnet_uuid))\nprint(\"AZ1_SVC_SUBNET_UUID={}\".format(az1_svc_subnet_uuid[0]))\nprint(\"AZ2_SVC_SUBNET_UUID={}\".format(az2_svc_subnet_uuid[0]))\nprint(\"AZ3_SVC_SUBNET_UUID={}\".format(az3_svc_subnet_uuid[0]))\nprint(\"AZ1_SVC_SUBNET_NAME={}\".format(az1_svc_subnet_uuid[1]))\nprint(\"AZ2_SVC_SUBNET_NAME={}\".format(az2_svc_subnet_uuid[1]))\nprint(\"AZ3_SVC_SUBNET_NAME={}\".format(az3_svc_subnet_uuid[1]))\naz1_svc_subnet_tunnel = calmCreateTunnel(\"az1\"+az1_svc_subnet_uuid[1])\naz2_svc_subnet_tunnel = calmCreateTunnel(\"az2\"+az2_svc_subnet_uuid[1])\naz3_svc_subnet_tunnel = calmCreateTunnel(\"az3\"+az3_svc_subnet_uuid[1])\nprint(\"AZ1_SVC_SUBNET_TUNNEL_UUID={}\".format(az1_svc_subnet_tunnel[0]))\nprint(\"AZ2_SVC_SUBNET_TUNNEL_UUID={}\".format(az2_svc_subnet_tunnel[0]))\nprint(\"AZ3_SVC_SUBNET_TUNNEL_UUID={}\".format(az3_svc_subnet_tunnel[0]))\nprint(\"AZ1_SVC_SUBNET_TUNNEL_NAME={}\".format(az1_svc_subnet_tunnel[1]))\nprint(\"AZ2_SVC_SUBNET_TUNNEL_NAME={}\".format(az2_svc_subnet_tunnel[1]))\nprint(\"AZ3_SVC_SUBNET_TUNNEL_NAME={}\".format(az3_svc_subnet_tunnel[1]))\n\naz1_tenant_subnet_uuid = createVpcSubnet(az1_pc_ip,az1_pc_username,az1_pc_password,az1_VPC_UUID,\"az1\"+vpc_tenant_subnetName,vpc_tenant_subnetIp,vpc_tenant_subnetMask,vpc_tenant_defaultGateway,az1_vpc_tenant_DefaultSubnet_PoolRange)\naz2_tenant_subnet_uuid = createVpcSubnet(az2_pc_ip,az2_pc_username,az2_pc_password,az2_VPC_UUID,\"az2\"+vpc_tenant_subnetName,vpc_tenant_subnetIp,vpc_tenant_subnetMask,vpc_tenant_defaultGateway,az2_vpc_tenant_DefaultSubnet_PoolRange)\naz3_tenant_subnet_uuid = createVpcSubnet(az3_pc_ip,az3_pc_username,az3_pc_password,az3_VPC_UUID,\"az3\"+vpc_tenant_subnetName,vpc_tenant_subnetIp,vpc_tenant_subnetMask,vpc_tenant_defaultGateway,az3_vpc_tenant_DefaultSubnet_PoolRange)\n#print(\"AZ1 Tenant Subnet UUID: {}\".format(az1_tenant_subnet_uuid))\n#print(\"AZ2 Tenant Subnet UUID: {}\".format(az2_tenant_subnet_uuid))\n#print(\"AZ3 Tenant Subnet UUID: {}\".format(az3_tenant_subnet_uuid))\nprint(\"AZ1_USER_SUBNET_UUID={}\".format(az1_tenant_subnet_uuid[0]))\nprint(\"AZ2_USER_SUBNET_UUID={}\".format(az2_tenant_subnet_uuid[0]))\nprint(\"AZ3_USER_SUBNET_UUID={}\".format(az3_tenant_subnet_uuid[0]))\nprint(\"AZ1_USER_SUBNET_NAME={}\".format(az1_tenant_subnet_uuid[1]))\nprint(\"AZ2_USER_SUBNET_NAME={}\".format(az2_tenant_subnet_uuid[1]))\nprint(\"AZ3_USER_SUBNET_NAME={}\".format(az3_tenant_subnet_uuid[1]))\n\ntenantVpcSubnetUuid = []\ndata = {\n    \"uuid\": az1_tenant_subnet_uuid[0],\n    \"name\": az1_tenant_subnet_uuid[1]\n}\ntenantVpcSubnetUuid.append(data)\ndata = {\n    \"uuid\": az2_tenant_subnet_uuid[0],\n    \"name\": az2_tenant_subnet_uuid[1]\n}\ntenantVpcSubnetUuid.append(data)\ndata = {\n    \"uuid\": az3_tenant_subnet_uuid[0],\n    \"name\": az3_tenant_subnet_uuid[1]\n}\ntenantVpcSubnetUuid.append(data)\n\ncalmProviderAccountListUUID = []\ncalmProviderAccountListUUID.append(get_calmProviderAccountUUID(az1_provider_account_name))\ncalmProviderAccountListUUID.append(get_calmProviderAccountUUID(az2_provider_account_name))\ncalmProviderAccountListUUID.append(get_calmProviderAccountUUID(az3_provider_account_name))\n#print(calmProviderAccountListUUID)\n\ncalmProviderNetworkListUUID = []\ncalmProviderNetworkListUUID.append(az1_external_subnet_uuid)\ncalmProviderNetworkListUUID.append(az2_external_subnet_uuid)\ncalmProviderNetworkListUUID.append(az3_external_subnet_uuid)\n#print(calmProviderNetworkListUUID)\n\ncalmProviderClusterUUID = []\ncalmProviderClusterUUID.append(get_calmProviderClusterUUID(az1_provider_account_name))\ncalmProviderClusterUUID.append(get_calmProviderClusterUUID(az2_provider_account_name))\ncalmProviderClusterUUID.append(get_calmProviderClusterUUID(az3_provider_account_name))\n#print(calmProviderClusterUUID)\n\ndirectoryJson = get_directory_service_uuid(DirectoryServiceName)\nadminUserUuid = createUser(Tenant_Admin_UPN,directoryJson)\n\nsleep(30)\n\nprojectUUID = createProjectv3(projectName,Tenant_Admin_UPN,adminUserUuid,calmProviderNetworkListUUID,defaultNetworkName,tenantVpcSubnetUuid,calmProviderAccountListUUID,calmProviderClusterUUID,vpcUuidList)\nprint(\"PROJECT_UUID={}\".format(projectUUID))\n\nprojectName = get_projectName(projectUUID)\n\navailableBlueprints = get_publishedBlueprints(blueprintIdentifier)\nfor blueprint in availableBlueprints:\n    bpuuid = blueprint['uuid']\n    bpname = blueprint['name']\n    #print(uuid)\n    updateResult = publish_blueprint(bpuuid,projectUUID,projectName)\n    if updateResult:\n        print('Blueprint: {} added to project {}'.format(bpname,projectName))\n\n\nenvironmentList = []\n\nenvironmentList.append(createEnvrionmentV2(\"AZ1\",projectUUID,get_calmProviderClusterUUID(az1_provider_account_name),get_calmProviderAccountUUID(az1_provider_account_name),az1_tenant_subnet_uuid[0],az1_VPC_UUID,get_calmProviderPcPeMapUuuid(az1_provider_account_name),default_Windows_Image_Name,az1_windows_image_uuid,default_Linux_Image_Name,az1_linux_image_uuid))\nenvironmentList.append(createEnvrionmentV2(\"AZ2\",projectUUID,get_calmProviderClusterUUID(az2_provider_account_name),get_calmProviderAccountUUID(az2_provider_account_name),az2_tenant_subnet_uuid[0],az2_VPC_UUID,get_calmProviderPcPeMapUuuid(az2_provider_account_name),default_Windows_Image_Name,az2_windows_image_uuid,default_Linux_Image_Name,az2_linux_image_uuid))\nenvironmentList.append(createEnvrionmentV2(\"AZ3\",projectUUID,get_calmProviderClusterUUID(az3_provider_account_name),get_calmProviderAccountUUID(az3_provider_account_name),az3_tenant_subnet_uuid[0],az3_VPC_UUID,get_calmProviderPcPeMapUuuid(az3_provider_account_name),default_Windows_Image_Name,az3_windows_image_uuid,default_Linux_Image_Name,az3_linux_image_uuid))\n\n\nfor environment in environmentList:\n    associateEnvWithProject(environment,projectUUID)\n    sleep(5)\n\n","eval_variables":["AZ1_VPC_UUID","AZ2_VPC_UUID","AZ3_VPC_UUID","AZ1_SVC_SUBNET_UUID","AZ2_SVC_SUBNET_UUID","AZ3_SVC_SUBNET_UUID","AZ1_SVC_SUBNET_NAME","AZ2_SVC_SUBNET_NAME","AZ3_SVC_SUBNET_NAME","AZ1_USER_SUBNET_UUID","AZ2_USER_SUBNET_UUID","AZ3_USER_SUBNET_UUID","AZ1_USER_SUBNET_NAME","AZ2_USER_SUBNET_NAME","AZ3_USER_SUBNET_NAME","PROJECT_UUID","AZ1_SVC_SUBNET_TUNNEL_UUID","AZ2_SVC_SUBNET_TUNNEL_UUID","AZ3_SVC_SUBNET_TUNNEL_UUID","AZ1_SVC_SUBNET_TUNNEL_NAME","AZ2_SVC_SUBNET_TUNNEL_NAME","AZ3_SVC_SUBNET_TUNNEL_NAME","AZ1_EXTERNAL_SUBNET_UUID","AZ2_EXTERNAL_SUBNET_UUID","AZ3_EXTERNAL_SUBNET_UUID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]}],"description":"","name":"6c2fb3dc_runbook","main_task_local_reference":{"kind":"app_task","name":"ec4c498f_dag"},"variable_list":[]},"name":"pre_action_create"},{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"APITasks"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Delete AZ1 VPC Subnets"},{"kind":"app_task","name":"Delete AZ1 VPC"},{"kind":"app_task","name":"Delete AZ2 VPC Subnets"},{"kind":"app_task","name":"Delete AZ2 VPC"},{"kind":"app_task","name":"Delete AZ3 VPC Subnets"},{"kind":"app_task","name":"Delete AZ3 VPC"},{"kind":"app_task","name":"Delete Project"}],"name":"c2cc9d05_dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Delete AZ1 VPC Subnets"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Delete AZ1 VPC"}},{"from_task_reference":{"kind":"app_task","name":"Delete AZ1 VPC"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Delete AZ2 VPC Subnets"}},{"from_task_reference":{"kind":"app_task","name":"Delete AZ2 VPC Subnets"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Delete AZ2 VPC"}},{"from_task_reference":{"kind":"app_task","name":"Delete AZ2 VPC"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Delete AZ3 VPC Subnets"}},{"from_task_reference":{"kind":"app_task","name":"Delete AZ3 VPC Subnets"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Delete AZ3 VPC"}},{"from_task_reference":{"kind":"app_task","name":"Delete AZ3 VPC"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Delete Project"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"APITasks"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Delete AZ1 VPC Subnets","attrs":{"script":"pc_username = '@@{AZ1_PC_CREDENTIALS.username}@@'\npc_password = '@@{AZ1_PC_CREDENTIALS.secret}@@'\n\nsvc_subnet_uuid = '@@{AZ1_SVC_SUBNET_UUID}@@'\nuser_subnet_uuid = '@@{AZ1_USER_SUBNET_UUID}@@'\n\ndef delete_vpc_subnets(subnet_uuid):\n  api_url = 'https:\/\/@@{AZ1_PC_IP}@@:9440\/api\/nutanix\/v3\/subnets\/' + subnet_uuid\n  headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n  payload = {}\n\n  r = urlreq(api_url, verb='DELETE', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=pc_username, passwd=pc_password)\n  if r.ok:\n      resp = json.loads(r.content)\n      task_uuid = resp['status']['execution_context']['task_uuid']\n\n  else:\n      print(\"Post request failed\", r.content)\n      exit(1)\n    \n#AZ1\nprint(delete_vpc_subnets(svc_subnet_uuid))\nprint(delete_vpc_subnets(user_subnet_uuid))","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"APITasks"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Delete AZ1 VPC","attrs":{"script":"pc_username = '@@{AZ1_PC_CREDENTIALS.username}@@'\npc_password = '@@{AZ1_PC_CREDENTIALS.secret}@@'\n\naz_vpc_uuid = '@@{AZ1_VPC_UUID}@@'\n\ndef delete_vpc(vpc_uuid):\n  api_url = 'https:\/\/@@{AZ1_PC_IP}@@:9440\/api\/nutanix\/v3\/vpcs\/' + vpc_uuid\n  headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n  payload = {}\n\n  r = urlreq(api_url, verb='DELETE', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=pc_username, passwd=pc_password)\n  if r.ok:\n      resp = json.loads(r.content)\n      task_uuid = resp['status']['execution_context']['task_uuid']\n\n  else:\n      print(\"Post request failed\", r.content)\n      exit(1)\n    \n#AZ1\nprint(delete_vpc(az_vpc_uuid))\n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"APITasks"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Delete AZ2 VPC Subnets","attrs":{"script":"pc_username = '@@{AZ2_PC_CREDENTIALS.username}@@'\npc_password = '@@{AZ2_PC_CREDENTIALS.secret}@@'\n\nsvc_subnet_uuid = '@@{AZ2_SVC_SUBNET_UUID}@@'\nuser_subnet_uuid = '@@{AZ2_USER_SUBNET_UUID}@@'\n\ndef delete_vpc_subnets(subnet_uuid):\n  api_url = 'https:\/\/@@{AZ2_PC_IP}@@:9440\/api\/nutanix\/v3\/subnets\/' + subnet_uuid\n  headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n  payload = {}\n\n  r = urlreq(api_url, verb='DELETE', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=pc_username, passwd=pc_password)\n  if r.ok:\n      resp = json.loads(r.content)\n      task_uuid = resp['status']['execution_context']['task_uuid']\n\n  else:\n      print(\"Post request failed\", r.content)\n      exit(1)\n    \n#AZ2\nprint(delete_vpc_subnets(svc_subnet_uuid))\nprint(delete_vpc_subnets(user_subnet_uuid))","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"APITasks"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Delete AZ2 VPC","attrs":{"script":"pc_username = '@@{AZ2_PC_CREDENTIALS.username}@@'\npc_password = '@@{AZ2_PC_CREDENTIALS.secret}@@'\n\naz_vpc_uuid = '@@{AZ2_VPC_UUID}@@'\n\ndef delete_vpc(vpc_uuid):\n  api_url = 'https:\/\/@@{AZ2_PC_IP}@@:9440\/api\/nutanix\/v3\/vpcs\/' + vpc_uuid\n  headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n  payload = {}\n\n  r = urlreq(api_url, verb='DELETE', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=pc_username, passwd=pc_password)\n  if r.ok:\n      resp = json.loads(r.content)\n      task_uuid = resp['status']['execution_context']['task_uuid']\n\n  else:\n      print(\"Post request failed\", r.content)\n      exit(1)\n    \n#AZ2\nprint(delete_vpc(az_vpc_uuid))\n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"APITasks"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Delete AZ3 VPC Subnets","attrs":{"script":"pc_username = '@@{AZ3_PC_CREDENTIALS.username}@@'\npc_password = '@@{AZ3_PC_CREDENTIALS.secret}@@'\n\nsvc_subnet_uuid = '@@{AZ3_SVC_SUBNET_UUID}@@'\nuser_subnet_uuid = '@@{AZ3_USER_SUBNET_UUID}@@'\n\ndef delete_vpc_subnets(subnet_uuid):\n  api_url = 'https:\/\/@@{AZ3_PC_IP}@@:9440\/api\/nutanix\/v3\/subnets\/' + subnet_uuid\n  headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n  payload = {}\n\n  r = urlreq(api_url, verb='DELETE', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=pc_username, passwd=pc_password)\n  if r.ok:\n      resp = json.loads(r.content)\n      task_uuid = resp['status']['execution_context']['task_uuid']\n\n  else:\n      print(\"Post request failed\", r.content)\n      exit(1)\n    \n#AZ3\nprint(delete_vpc_subnets(svc_subnet_uuid))\nprint(delete_vpc_subnets(user_subnet_uuid))","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"APITasks"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Delete AZ3 VPC","attrs":{"script":"pc_username = '@@{AZ3_PC_CREDENTIALS.username}@@'\npc_password = '@@{AZ3_PC_CREDENTIALS.secret}@@'\n\naz_vpc_uuid = '@@{AZ3_VPC_UUID}@@'\n\ndef delete_vpc(vpc_uuid):\n  api_url = 'https:\/\/@@{AZ3_PC_IP}@@:9440\/api\/nutanix\/v3\/vpcs\/' + vpc_uuid\n  headers = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n  payload = {}\n\n  r = urlreq(api_url, verb='DELETE', params=json.dumps(payload), headers=headers, verify=False, auth=\"BASIC\", user=pc_username, passwd=pc_password)\n  if r.ok:\n      resp = json.loads(r.content)\n      task_uuid = resp['status']['execution_context']['task_uuid']\n\n  else:\n      print(\"Post request failed\", r.content)\n      exit(1)\n    \n#AZ3\nprint(delete_vpc(az_vpc_uuid))\n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"APITasks"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Delete Project","attrs":{"script":"jwt = '@@{calm_jwt}@@'\nprojectUUID = '@@{PROJECT_UUID}@@'\napi_url = 'https:\/\/localhost:9440\/api\/nutanix\/v3\/calm_projects\/{}'.format(projectUUID)\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Bearer {}'.format(jwt)}\n\npayload = {}\n\nr = urlreq(api_url, verb='DELETE', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n    task_uuid = resp['status']['execution_context']['task_uuid']\n\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\n","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"26bc2c49_runbook","main_task_local_reference":{"kind":"app_task","name":"c2cc9d05_dag"},"variable_list":[]},"name":"post_action_delete"}],"type":"EXISTING_VM","name":"APITasks","readiness_probe":{"connection_type":"SSH","retries":"5","connection_protocol":"","connection_port":22,"address":"","delay_secs":"60","disable_readiness_probe":true},"os_type":"Linux","create_spec":{"type":"","address":"localhost"},"variable_list":[]},{"description":"","action_list":[{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AZ1_DC"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"getAz1SvcSubnet"}],"name":"990a2554_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"AZ1_DC"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"getAz1SvcSubnet","attrs":{"exit_status":[],"script":"\nsubnet={\"name\": \"@@{APITasks.AZ1_SVC_SUBNET_NAME}@@\",\"uuid\": \"@@{APITasks.AZ1_SVC_SUBNET_UUID}@@\"}\nprint \"az1svcsubnet={}\".format(json.dumps(subnet))","eval_variables":["az1svcsubnet"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]}],"description":"","name":"2bf652e7_runbook","main_task_local_reference":{"kind":"app_task","name":"990a2554_dag"},"variable_list":[]},"name":"pre_action_create"},{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AZ1_DC"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"7cd73d20_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"56569533_runbook","main_task_local_reference":{"kind":"app_task","name":"7cd73d20_dag"},"variable_list":[]},"name":"post_action_delete"}],"type":"AHV_VM","name":"AZ1_DC","readiness_probe":{"connection_type":"POWERSHELL","retries":"5","connection_protocol":"http","connection_port":5985,"address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","delay_secs":"10","disable_readiness_probe":true},"os_type":"Windows","create_spec":{"name":"vpc-@@{TENANT_NAME}@@-AZ1-DC01","resources":{"nic_list":[{"nic_type":"NORMAL_NIC","vpc_reference":null,"ip_endpoint_list":[{"ip":"10.10.1.5","type":"ASSIGNED"}],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"","uuid":"@@{az1svcsubnet.uuid}@@"},"type":""}],"serial_port_list":[],"guest_tools":null,"num_vcpus_per_socket":1,"num_sockets":2,"gpu_list":[],"memory_size_mib":8192,"parent_reference":null,"hardware_clock_timezone":"","guest_customization":{"cloud_init":null,"type":"","sysprep":{"is_domain":false,"install_type":"PREPARED","domain_credential_reference":null,"domain":"","dns_ip":"","dns_search_path":"","unattend_xml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<unattend xmlns=\"urn:schemas-microsoft-com:unattend\">\n   <settings pass=\"specialize\">\n      <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-Shell-Setup\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n         <ComputerName>AZ1-DC01<\/ComputerName>\n         <RegisteredOrganization>DSTA<\/RegisteredOrganization>\n         <RegisteredOwner>DSTA<\/RegisteredOwner>\n         <TimeZone>China Standard Time<\/TimeZone>\n      <\/component>\n   <\/settings>\n   <settings pass=\"oobeSystem\">\n      <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-Shell-Setup\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n         <UserAccounts>\n            <AdministratorPassword>\n               <Value>ntnx\/4DSTA<\/Value>\n               <PlainText>true<\/PlainText>\n            <\/AdministratorPassword>\n         <\/UserAccounts>\n         <OOBE>\n            <HideEULAPage>true<\/HideEULAPage>\n         <\/OOBE>\n      <\/component>\n      <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-International-Core\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n         <InputLocale>en-US<\/InputLocale>\n         <SystemLocale>en-US<\/SystemLocale>\n         <UILanguageFallback>en-us<\/UILanguageFallback>\n         <UILanguage>en-US<\/UILanguage>\n         <UserLocale>en-US<\/UserLocale>\n      <\/component>\n   <\/settings>\n<\/unattend>","type":""}},"power_state":"ON","type":"","account_uuid":"1da3b7dc-646a-457e-aad0-066b25ed75ac","boot_config":{"boot_device":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"}},"type":"","boot_type":"LEGACY","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"image","type":"","name":"W2K19-Image","uuid":"79b0a1bc-ce3e-4c6e-9c77-c626a0aeb741"},"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"},"device_type":"DISK"}}]},"availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":{"kind":"cluster","type":"","name":"SGNTNXWLPE_AZ01","uuid":"0005d285-3508-9822-4991-3cecef176e2d"},"categories":""},"variable_list":[]},{"description":"","action_list":[{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AZ2_DC"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"getAz2SvcSubnet"}],"name":"990a2554_dag_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"AZ2_DC"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"getAz2SvcSubnet","attrs":{"exit_status":[],"script":"subnet={\"name\": \"@@{APITasks.AZ2_SVC_SUBNET_NAME}@@\",\"uuid\": \"@@{APITasks.AZ2_SVC_SUBNET_UUID}@@\"}\nprint \"az2svcsubnet={}\".format(json.dumps(subnet))","eval_variables":["az2svcsubnet"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]}],"description":"","name":"2bf652e7_runbook_cloned_0","main_task_local_reference":{"kind":"app_task","name":"990a2554_dag_cloned_1"},"variable_list":[]},"name":"pre_action_create"},{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AZ2_DC"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"7cd73d20_dag_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"56569533_runbook_cloned_0","main_task_local_reference":{"kind":"app_task","name":"7cd73d20_dag_cloned_1"},"variable_list":[]},"name":"post_action_delete"}],"type":"AHV_VM","name":"AZ2_DC","readiness_probe":{"connection_type":"POWERSHELL","retries":"5","connection_protocol":"http","connection_port":5985,"address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","delay_secs":"10","disable_readiness_probe":true},"os_type":"Windows","create_spec":{"name":"vpc-@@{TENANT_NAME}@@-AZ2-DC01","resources":{"nic_list":[{"nic_type":"NORMAL_NIC","vpc_reference":null,"ip_endpoint_list":[{"ip":"10.10.1.75","type":"ASSIGNED"}],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"","uuid":"@@{az2svcsubnet.uuid}@@"},"type":""}],"serial_port_list":[],"guest_tools":null,"num_vcpus_per_socket":1,"num_sockets":2,"gpu_list":[],"memory_size_mib":8192,"parent_reference":null,"hardware_clock_timezone":"","guest_customization":{"cloud_init":null,"type":"","sysprep":{"is_domain":false,"install_type":"PREPARED","domain_credential_reference":null,"domain":"","dns_ip":"","dns_search_path":"","unattend_xml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<unattend xmlns=\"urn:schemas-microsoft-com:unattend\">\n   <settings pass=\"specialize\">\n      <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-Shell-Setup\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n         <ComputerName>AZ2-DC01<\/ComputerName>\n         <RegisteredOrganization>DSTA<\/RegisteredOrganization>\n         <RegisteredOwner>DSTA<\/RegisteredOwner>\n         <TimeZone>China Standard Time<\/TimeZone>\n      <\/component>\n   <\/settings>\n   <settings pass=\"oobeSystem\">\n      <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-Shell-Setup\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n         <UserAccounts>\n            <AdministratorPassword>\n               <Value>ntnx\/4DSTA<\/Value>\n               <PlainText>true<\/PlainText>\n            <\/AdministratorPassword>\n         <\/UserAccounts>\n         <OOBE>\n            <HideEULAPage>true<\/HideEULAPage>\n         <\/OOBE>\n      <\/component>\n      <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-International-Core\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n         <InputLocale>en-US<\/InputLocale>\n         <SystemLocale>en-US<\/SystemLocale>\n         <UILanguageFallback>en-us<\/UILanguageFallback>\n         <UILanguage>en-US<\/UILanguage>\n         <UserLocale>en-US<\/UserLocale>\n      <\/component>\n   <\/settings>\n<\/unattend>","type":""}},"power_state":"ON","type":"","account_uuid":"060a08e8-fed9-4a2f-aba3-be07faa8506f","boot_config":{"boot_device":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"}},"type":"","boot_type":"LEGACY","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"image","type":"","name":"W2K19-Image","uuid":"4c06fe5c-6aeb-4ffa-8d9d-12f817d64197"},"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"},"device_type":"DISK"}}]},"availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":{"kind":"cluster","type":"","name":"SGNTNXWLPE_AZ02","uuid":"0005d285-4a33-b1d4-1ebd-ac1f6b3b4778"},"categories":""},"variable_list":[]},{"description":"","action_list":[{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AZ3_DC"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"getAz3SvcSubnet"}],"name":"990a2554_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"AZ3_DC"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"getAz3SvcSubnet","attrs":{"exit_status":[],"script":"subnet={\"name\": \"@@{APITasks.AZ3_SVC_SUBNET_NAME}@@\",\"uuid\": \"@@{APITasks.AZ3_SVC_SUBNET_UUID}@@\"}\nprint \"az3svcsubnet={}\".format(json.dumps(subnet))","eval_variables":["az3svcsubnet"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]}],"description":"","name":"2bf652e7_runbook_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"990a2554_dag_cloned_1_cloned_1"},"variable_list":[]},"name":"pre_action_create"},{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AZ3_DC"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"7cd73d20_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"56569533_runbook_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"7cd73d20_dag_cloned_1_cloned_1"},"variable_list":[]},"name":"post_action_delete"}],"type":"AHV_VM","name":"AZ3_DC","readiness_probe":{"connection_type":"POWERSHELL","retries":"5","connection_protocol":"http","connection_port":5985,"address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","delay_secs":"10","disable_readiness_probe":true},"os_type":"Windows","create_spec":{"name":"vpc-@@{TENANT_NAME}@@-AZ3-DC01","resources":{"nic_list":[{"nic_type":"NORMAL_NIC","vpc_reference":null,"ip_endpoint_list":[{"ip":"10.10.1.155","type":"ASSIGNED"}],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"","uuid":"@@{az3svcsubnet.uuid}@@"},"type":""}],"serial_port_list":[],"guest_tools":null,"num_vcpus_per_socket":1,"num_sockets":2,"gpu_list":[],"memory_size_mib":8192,"parent_reference":null,"hardware_clock_timezone":"","guest_customization":{"cloud_init":null,"type":"","sysprep":{"is_domain":false,"install_type":"PREPARED","domain_credential_reference":null,"domain":"","dns_ip":"","dns_search_path":"","unattend_xml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<unattend xmlns=\"urn:schemas-microsoft-com:unattend\">\n   <settings pass=\"specialize\">\n      <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-Shell-Setup\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n         <ComputerName>AZ3-DC01<\/ComputerName>\n         <RegisteredOrganization>DSTA<\/RegisteredOrganization>\n         <RegisteredOwner>DSTA<\/RegisteredOwner>\n         <TimeZone>China Standard Time<\/TimeZone>\n      <\/component>\n   <\/settings>\n   <settings pass=\"oobeSystem\">\n      <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-Shell-Setup\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n         <UserAccounts>\n            <AdministratorPassword>\n               <Value>ntnx\/4DSTA<\/Value>\n               <PlainText>true<\/PlainText>\n            <\/AdministratorPassword>\n         <\/UserAccounts>\n         <OOBE>\n            <HideEULAPage>true<\/HideEULAPage>\n         <\/OOBE>\n      <\/component>\n      <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-International-Core\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n         <InputLocale>en-US<\/InputLocale>\n         <SystemLocale>en-US<\/SystemLocale>\n         <UILanguageFallback>en-us<\/UILanguageFallback>\n         <UILanguage>en-US<\/UILanguage>\n         <UserLocale>en-US<\/UserLocale>\n      <\/component>\n   <\/settings>\n<\/unattend>","type":""}},"power_state":"ON","type":"","account_uuid":"2182ed65-a52a-45c7-a0d3-7235c88bf404","boot_config":{"boot_device":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"}},"type":"","boot_type":"LEGACY","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"image","type":"","name":"W2K19-Image","uuid":"13fb340f-9621-4601-abcf-551154cbc9e0"},"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"},"device_type":"DISK"}}]},"availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":{"kind":"cluster","type":"","name":"SGNTNXWLPE_AZ03","uuid":"0005d285-182d-ccb2-0000-0000000158f9"},"categories":""},"variable_list":[]},{"description":"","action_list":[{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AZ1 Svc Helper VM"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"getAz1SvcSubnetHelperSubnet"}],"name":"30e0df4d_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"AZ1 Svc Helper VM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"getAz1SvcSubnetHelperSubnet","attrs":{"exit_status":[],"script":"\nsubnet={\"name\": \"@@{APITasks.AZ1_SVC_SUBNET_NAME}@@\",\"uuid\": \"@@{APITasks.AZ1_SVC_SUBNET_UUID}@@\"}\nprint \"helperaz1svcsubnet={}\".format(json.dumps(subnet))","eval_variables":["helperaz1svcsubnet"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]}],"description":"","name":"6282d6f5_runbook","main_task_local_reference":{"kind":"app_task","name":"30e0df4d_dag"},"variable_list":[]},"name":"pre_action_create"},{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AZ1 Svc Helper VM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"243e8aa4_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"9ff1cb44_runbook","main_task_local_reference":{"kind":"app_task","name":"243e8aa4_dag"},"variable_list":[]},"name":"post_action_delete"}],"type":"AHV_VM","name":"AZ1 Svc Helper VM","readiness_probe":{"connection_type":"SSH","retries":"5","connection_protocol":"","connection_port":22,"address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","delay_secs":"0","disable_readiness_probe":true},"os_type":"Linux","create_spec":{"name":"vpc-@@{TENANT_NAME}@@-AZ1-svcHelper01","resources":{"nic_list":[{"nic_type":"NORMAL_NIC","vpc_reference":null,"ip_endpoint_list":[{"ip":"10.10.1.4","type":"ASSIGNED"}],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"","uuid":"@@{helperaz1svcsubnet.uuid}@@"},"type":""},{"nic_type":"NORMAL_NIC","vpc_reference":null,"ip_endpoint_list":[],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"","uuid":"df3824f3-611d-4d67-abdf-0deef917df82"},"type":""}],"serial_port_list":[],"guest_tools":null,"num_vcpus_per_socket":1,"num_sockets":1,"gpu_list":[],"memory_size_mib":4096,"parent_reference":null,"hardware_clock_timezone":"","guest_customization":{"cloud_init":{"meta_data":"","type":"","user_data":"#cloud-config\nruncmd:\n - ip route del default via 172.16.103.1\n - ip route add 172.16.0.0\/16 via 172.16.103.1 dev eth1\n - ip route add 172.16.103.0\/24 dev eth1\nssh_pwauth: true\n"},"type":"","sysprep":null},"power_state":"ON","type":"","account_uuid":"1da3b7dc-646a-457e-aad0-066b25ed75ac","boot_config":{"boot_device":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"}},"type":"","boot_type":"LEGACY","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"image","type":"","name":"CalmTunnelClient","uuid":"72f5474b-c843-4bc0-a91e-ef0e5079f0a9"},"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"},"device_type":"DISK"}}]},"availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":{"kind":"cluster","type":"","name":"SGNTNXWLPE_AZ01","uuid":"0005d285-3508-9822-4991-3cecef176e2d"},"categories":""},"variable_list":[]},{"description":"","action_list":[{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AZ2 Svc Helper VM"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"getAz2SvcSubnetHelperSubnet"}],"name":"30e0df4d_dag_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"AZ2 Svc Helper VM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"getAz2SvcSubnetHelperSubnet","attrs":{"exit_status":[],"script":"\nsubnet={\"name\": \"@@{APITasks.AZ2_SVC_SUBNET_NAME}@@\",\"uuid\": \"@@{APITasks.AZ2_SVC_SUBNET_UUID}@@\"}\nprint \"helperaz2svcsubnet={}\".format(json.dumps(subnet))","eval_variables":["helperaz2svcsubnet"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]}],"description":"","name":"6282d6f5_runbook_cloned_1","main_task_local_reference":{"kind":"app_task","name":"30e0df4d_dag_cloned_1"},"variable_list":[]},"name":"pre_action_create"},{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AZ2 Svc Helper VM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"243e8aa4_dag_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"9ff1cb44_runbook_cloned_1","main_task_local_reference":{"kind":"app_task","name":"243e8aa4_dag_cloned_1"},"variable_list":[]},"name":"post_action_delete"}],"type":"AHV_VM","name":"AZ2 Svc Helper VM","readiness_probe":{"connection_type":"SSH","retries":"5","connection_protocol":"","connection_port":22,"address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","delay_secs":"0","disable_readiness_probe":true},"os_type":"Linux","create_spec":{"name":"vpc-@@{TENANT_NAME}@@-AZ2-svcHelper01","resources":{"nic_list":[{"nic_type":"NORMAL_NIC","vpc_reference":null,"ip_endpoint_list":[{"ip":"10.10.1.74","type":"ASSIGNED"}],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"","uuid":"@@{helperaz2svcsubnet.uuid}@@"},"type":""},{"nic_type":"NORMAL_NIC","vpc_reference":null,"ip_endpoint_list":[],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"","uuid":"1c0b470c-cab1-46f3-b8ab-9b2792219eed"},"type":""}],"serial_port_list":[],"guest_tools":null,"num_vcpus_per_socket":1,"num_sockets":1,"gpu_list":[],"memory_size_mib":4096,"parent_reference":null,"hardware_clock_timezone":"","guest_customization":{"cloud_init":{"meta_data":"","type":"","user_data":"#cloud-config\nruncmd:\n - ip route del default via 172.16.103.1\n - ip route add 172.16.0.0\/16 via 172.16.103.1 dev eth1\n - ip route add 172.16.103.0\/24 dev eth1\nssh_pwauth: true\n"},"type":"","sysprep":null},"power_state":"ON","type":"","account_uuid":"060a08e8-fed9-4a2f-aba3-be07faa8506f","boot_config":{"boot_device":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"}},"type":"","boot_type":"LEGACY","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"image","type":"","name":"CalmTunnelClient","uuid":"32b4d9af-d4f8-4ac5-a6f6-eb19b69138db"},"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"},"device_type":"DISK"}}]},"availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":{"kind":"cluster","type":"","name":"SGNTNXWLPE_AZ02","uuid":"0005d285-4a33-b1d4-1ebd-ac1f6b3b4778"},"categories":""},"variable_list":[]},{"description":"","action_list":[{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AZ3 Svc Helper VM"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"getAz3SvcSubnetHelperSubnet"}],"name":"30e0df4d_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"AZ3 Svc Helper VM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"getAz3SvcSubnetHelperSubnet","attrs":{"exit_status":[],"script":"\nsubnet={\"name\": \"@@{APITasks.AZ3_SVC_SUBNET_NAME}@@\",\"uuid\": \"@@{APITasks.AZ3_SVC_SUBNET_UUID}@@\"}\nprint \"helperaz3svcsubnet={}\".format(json.dumps(subnet))","eval_variables":["helperaz3svcsubnet"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]}],"description":"","name":"6282d6f5_runbook_cloned_1_cloned_0","main_task_local_reference":{"kind":"app_task","name":"30e0df4d_dag_cloned_1_cloned_1"},"variable_list":[]},"name":"pre_action_create"},{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AZ3 Svc Helper VM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"243e8aa4_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"9ff1cb44_runbook_cloned_1_cloned_0","main_task_local_reference":{"kind":"app_task","name":"243e8aa4_dag_cloned_1_cloned_1"},"variable_list":[]},"name":"post_action_delete"}],"type":"AHV_VM","name":"AZ3 Svc Helper VM","readiness_probe":{"connection_type":"SSH","retries":"5","connection_protocol":"","connection_port":22,"address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","delay_secs":"0","disable_readiness_probe":true},"os_type":"Linux","create_spec":{"name":"vpc-@@{TENANT_NAME}@@-AZ3-svcHelper01","resources":{"nic_list":[{"nic_type":"NORMAL_NIC","vpc_reference":null,"ip_endpoint_list":[{"ip":"10.10.1.154","type":"ASSIGNED"}],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"","uuid":"@@{helperaz3svcsubnet.uuid}@@"},"type":""},{"nic_type":"NORMAL_NIC","vpc_reference":null,"ip_endpoint_list":[],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"","uuid":"76ae0867-e5e7-4433-b369-8a547a25f99f"},"type":""}],"serial_port_list":[],"guest_tools":null,"num_vcpus_per_socket":1,"num_sockets":1,"gpu_list":[],"memory_size_mib":4096,"parent_reference":null,"hardware_clock_timezone":"","guest_customization":{"cloud_init":{"meta_data":"","type":"","user_data":"#cloud-config\nruncmd:\n - ip route del default via 172.16.103.1\n - ip route add 172.16.0.0\/16 via 172.16.103.1 dev eth1\n - ip route add 172.16.103.0\/24 dev eth1\nssh_pwauth: true\n"},"type":"","sysprep":null},"power_state":"ON","type":"","account_uuid":"2182ed65-a52a-45c7-a0d3-7235c88bf404","boot_config":{"boot_device":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"}},"type":"","boot_type":"LEGACY","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"image","type":"","name":"CalmTunnelClient","uuid":"c67280ab-11c9-48c9-804f-68faed6d7dca"},"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"},"device_type":"DISK"}}]},"availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":{"kind":"cluster","type":"","name":"SGNTNXWLPE_AZ03","uuid":"0005d285-182d-ccb2-0000-0000000158f9"},"categories":""},"variable_list":[]},{"description":"","action_list":[{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AZ1_JumphostVM"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"getAz1TenantSubnet"}],"name":"990a2554_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"AZ1_JumphostVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"getAz1TenantSubnet","attrs":{"exit_status":[],"script":"\nsubnet={\"name\": \"@@{APITasks.AZ1_USER_SUBNET_NAME}@@\",\"uuid\": \"@@{APITasks.AZ1_USER_SUBNET_UUID}@@\"}\nprint \"az1usersubnet={}\".format(json.dumps(subnet))","eval_variables":["az1usersubnet"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]}],"description":"","name":"2bf652e7_runbook_cloned_1_cloned_0","main_task_local_reference":{"kind":"app_task","name":"990a2554_dag_cloned_1_cloned_1"},"variable_list":[]},"name":"pre_action_create"},{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AZ1_JumphostVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"7cd73d20_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"56569533_runbook_cloned_1_cloned_0","main_task_local_reference":{"kind":"app_task","name":"7cd73d20_dag_cloned_1_cloned_1"},"variable_list":[]},"name":"post_action_delete"}],"type":"AHV_VM","name":"AZ1_JumphostVM","readiness_probe":{"connection_type":"POWERSHELL","retries":"5","connection_protocol":"http","connection_port":5985,"address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","delay_secs":"10","disable_readiness_probe":true},"os_type":"Windows","create_spec":{"name":"vpc-@@{TENANT_NAME}@@-AZ1-Jumphost1","resources":{"nic_list":[{"nic_type":"NORMAL_NIC","vpc_reference":null,"ip_endpoint_list":[{"ip":"10.10.10.5","type":"ASSIGNED"}],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"","uuid":"@@{az1usersubnet.uuid}@@"},"type":""}],"serial_port_list":[],"guest_tools":null,"num_vcpus_per_socket":2,"num_sockets":2,"gpu_list":[],"memory_size_mib":16384,"parent_reference":null,"hardware_clock_timezone":"","guest_customization":{"cloud_init":null,"type":"","sysprep":{"is_domain":false,"install_type":"PREPARED","domain_credential_reference":null,"domain":"","dns_ip":"","dns_search_path":"","unattend_xml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<unattend xmlns=\"urn:schemas-microsoft-com:unattend\">\n   <settings pass=\"specialize\">\n      <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-Shell-Setup\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n         <ComputerName>AZ1-Jump01<\/ComputerName>\n         <RegisteredOrganization>DSTA<\/RegisteredOrganization>\n         <RegisteredOwner>DSTA<\/RegisteredOwner>\n         <TimeZone>China Standard Time<\/TimeZone>\n      <\/component>\n   <\/settings>\n   <settings pass=\"oobeSystem\">\n      <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-Shell-Setup\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n         <UserAccounts>\n            <AdministratorPassword>\n               <Value>ntnx\/4DSTA<\/Value>\n               <PlainText>true<\/PlainText>\n            <\/AdministratorPassword>\n         <\/UserAccounts>\n         <OOBE>\n            <HideEULAPage>true<\/HideEULAPage>\n         <\/OOBE>\n      <\/component>\n      <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-International-Core\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n         <InputLocale>en-US<\/InputLocale>\n         <SystemLocale>en-US<\/SystemLocale>\n         <UILanguageFallback>en-us<\/UILanguageFallback>\n         <UILanguage>en-US<\/UILanguage>\n         <UserLocale>en-US<\/UserLocale>\n      <\/component>\n   <\/settings>\n<\/unattend>","type":""}},"power_state":"ON","type":"","account_uuid":"1da3b7dc-646a-457e-aad0-066b25ed75ac","boot_config":{"boot_device":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"}},"type":"","boot_type":"LEGACY","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"image","type":"","name":"W2K19-Image","uuid":"79b0a1bc-ce3e-4c6e-9c77-c626a0aeb741"},"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"},"device_type":"DISK"}}]},"availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":{"kind":"cluster","type":"","name":"SGNTNXWLPE_AZ01","uuid":"0005d285-3508-9822-4991-3cecef176e2d"},"categories":""},"variable_list":[]},{"description":"","action_list":[{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AZ2_JumphostVM"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"getAz2TenantSubnet"}],"name":"990a2554_dag_cloned_1_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"AZ2_JumphostVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"getAz2TenantSubnet","attrs":{"exit_status":[],"script":"\nsubnet={\"name\": \"@@{APITasks.AZ2_USER_SUBNET_NAME}@@\",\"uuid\": \"@@{APITasks.AZ2_USER_SUBNET_UUID}@@\"}\nprint \"az2usersubnet={}\".format(json.dumps(subnet))","eval_variables":["az2usersubnet"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]}],"description":"","name":"2bf652e7_runbook_cloned_1_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"990a2554_dag_cloned_1_cloned_1_cloned_1"},"variable_list":[]},"name":"pre_action_create"},{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AZ2_JumphostVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"7cd73d20_dag_cloned_1_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"56569533_runbook_cloned_1_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"7cd73d20_dag_cloned_1_cloned_1_cloned_1"},"variable_list":[]},"name":"post_action_delete"}],"type":"AHV_VM","name":"AZ2_JumphostVM","readiness_probe":{"connection_type":"POWERSHELL","retries":"5","connection_protocol":"http","connection_port":5985,"address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","delay_secs":"10","disable_readiness_probe":true},"os_type":"Windows","create_spec":{"name":"vpc-@@{TENANT_NAME}@@-AZ2-Jumphost1","resources":{"nic_list":[{"nic_type":"NORMAL_NIC","vpc_reference":null,"ip_endpoint_list":[{"ip":"10.10.10.75","type":"ASSIGNED"}],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"","uuid":"@@{az2usersubnet.uuid}@@"},"type":""}],"serial_port_list":[],"guest_tools":null,"num_vcpus_per_socket":2,"num_sockets":2,"gpu_list":[],"memory_size_mib":16384,"parent_reference":null,"hardware_clock_timezone":"","guest_customization":{"cloud_init":null,"type":"","sysprep":{"is_domain":false,"install_type":"PREPARED","domain_credential_reference":null,"domain":"","dns_ip":"","dns_search_path":"","unattend_xml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<unattend xmlns=\"urn:schemas-microsoft-com:unattend\">\n   <settings pass=\"specialize\">\n      <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-Shell-Setup\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n         <ComputerName>AZ2-Jump01<\/ComputerName>\n         <RegisteredOrganization>DSTA<\/RegisteredOrganization>\n         <RegisteredOwner>DSTA<\/RegisteredOwner>\n         <TimeZone>China Standard Time<\/TimeZone>\n      <\/component>\n   <\/settings>\n   <settings pass=\"oobeSystem\">\n      <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-Shell-Setup\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n         <UserAccounts>\n            <AdministratorPassword>\n               <Value>ntnx\/4DSTA<\/Value>\n               <PlainText>true<\/PlainText>\n            <\/AdministratorPassword>\n         <\/UserAccounts>\n         <OOBE>\n            <HideEULAPage>true<\/HideEULAPage>\n         <\/OOBE>\n      <\/component>\n      <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-International-Core\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n         <InputLocale>en-US<\/InputLocale>\n         <SystemLocale>en-US<\/SystemLocale>\n         <UILanguageFallback>en-us<\/UILanguageFallback>\n         <UILanguage>en-US<\/UILanguage>\n         <UserLocale>en-US<\/UserLocale>\n      <\/component>\n   <\/settings>\n<\/unattend>","type":""}},"power_state":"ON","type":"","account_uuid":"060a08e8-fed9-4a2f-aba3-be07faa8506f","boot_config":{"boot_device":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"}},"type":"","boot_type":"LEGACY","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"image","type":"","name":"W2K19-Image","uuid":"4c06fe5c-6aeb-4ffa-8d9d-12f817d64197"},"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"},"device_type":"DISK"}}]},"availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":{"kind":"cluster","type":"","name":"SGNTNXWLPE_AZ02","uuid":"0005d285-4a33-b1d4-1ebd-ac1f6b3b4778"},"categories":""},"variable_list":[]},{"description":"","action_list":[{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AZ3_JumphostVM"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"getAz3TenantSubnet"}],"name":"990a2554_dag_cloned_1_cloned_1_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"AZ3_JumphostVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"getAz3TenantSubnet","attrs":{"exit_status":[],"script":"\nsubnet={\"name\": \"@@{APITasks.AZ3_USER_SUBNET_NAME}@@\",\"uuid\": \"@@{APITasks.AZ3_USER_SUBNET_UUID}@@\"}\nprint \"az3usersubnet={}\".format(json.dumps(subnet))","eval_variables":["az3usersubnet"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]}],"description":"","name":"2bf652e7_runbook_cloned_1_cloned_0_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"990a2554_dag_cloned_1_cloned_1_cloned_1_cloned_1"},"variable_list":[]},"name":"pre_action_create"},{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"AZ3_JumphostVM"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"7cd73d20_dag_cloned_1_cloned_1_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"56569533_runbook_cloned_1_cloned_0_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"7cd73d20_dag_cloned_1_cloned_1_cloned_1_cloned_1"},"variable_list":[]},"name":"post_action_delete"}],"type":"AHV_VM","name":"AZ3_JumphostVM","readiness_probe":{"connection_type":"POWERSHELL","retries":"5","connection_protocol":"http","connection_port":5985,"address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","delay_secs":"10","disable_readiness_probe":true},"os_type":"Windows","create_spec":{"name":"vpc-@@{TENANT_NAME}@@-AZ3-Jumphost1","resources":{"nic_list":[{"nic_type":"NORMAL_NIC","vpc_reference":null,"ip_endpoint_list":[{"ip":"10.10.10.155","type":"ASSIGNED"}],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"","uuid":"@@{az3usersubnet.uuid}@@"},"type":""}],"serial_port_list":[],"guest_tools":null,"num_vcpus_per_socket":2,"num_sockets":2,"gpu_list":[],"memory_size_mib":16384,"parent_reference":null,"hardware_clock_timezone":"","guest_customization":{"cloud_init":null,"type":"","sysprep":{"is_domain":false,"install_type":"PREPARED","domain_credential_reference":null,"domain":"","dns_ip":"","dns_search_path":"","unattend_xml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<unattend xmlns=\"urn:schemas-microsoft-com:unattend\">\n   <settings pass=\"specialize\">\n      <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-Shell-Setup\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n         <ComputerName>AZ3-Jump01<\/ComputerName>\n         <RegisteredOrganization>DSTA<\/RegisteredOrganization>\n         <RegisteredOwner>DSTA<\/RegisteredOwner>\n         <TimeZone>China Standard Time<\/TimeZone>\n      <\/component>\n   <\/settings>\n   <settings pass=\"oobeSystem\">\n      <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-Shell-Setup\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n         <UserAccounts>\n            <AdministratorPassword>\n               <Value>ntnx\/4DSTA<\/Value>\n               <PlainText>true<\/PlainText>\n            <\/AdministratorPassword>\n         <\/UserAccounts>\n         <OOBE>\n            <HideEULAPage>true<\/HideEULAPage>\n         <\/OOBE>\n      <\/component>\n      <component xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" name=\"Microsoft-Windows-International-Core\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n         <InputLocale>en-US<\/InputLocale>\n         <SystemLocale>en-US<\/SystemLocale>\n         <UILanguageFallback>en-us<\/UILanguageFallback>\n         <UILanguage>en-US<\/UILanguage>\n         <UserLocale>en-US<\/UserLocale>\n      <\/component>\n   <\/settings>\n<\/unattend>","type":""}},"power_state":"ON","type":"","account_uuid":"2182ed65-a52a-45c7-a0d3-7235c88bf404","boot_config":{"boot_device":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"}},"type":"","boot_type":"LEGACY","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"image","type":"","name":"W2K19-Image","uuid":"13fb340f-9621-4601-abcf-551154cbc9e0"},"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"},"device_type":"DISK"}}]},"availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":{"kind":"cluster","type":"","name":"SGNTNXWLPE_AZ03","uuid":"0005d285-182d-ccb2-0000-0000000158f9"},"categories":""},"variable_list":[]}],"credential_definition_list":[{"username":"admin","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":true,"secret_reference":{}},"value":"kt1i9mfY0NulQm2TybC+438Eve+xQn7owXg\/y5p8AleLjNUy1ykuducd:utf-8"},"name":"AZ1_PC_CREDENTIALS","cred_class":"static"},{"username":"admin","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":true,"secret_reference":{}},"value":"h5G4Z7+EEe4OKtGBsmB6iyYoRbXmjjtcsBFRVJtkYMbJxX\/exTAqQPsp:utf-8"},"name":"AZ2_PC_CREDENTIALS","cred_class":"static"},{"username":"admin","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":true,"secret_reference":{}},"value":"5d9iMglagQyBVvqdnm7r\/Q4aq96AkJvMwMSZE\/EYwhp00TbEYElw3nhn:utf-8"},"name":"AZ3_PC_CREDENTIALS","cred_class":"static"}],"package_definition_list":[{"description":"","action_list":[],"type":"DEB","service_local_reference_list":[{"kind":"app_service","name":"API Tasks"}],"name":"Package1","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"553371ab_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"fbdcdf3f_runbook","main_task_local_reference":{"kind":"app_task","name":"553371ab_dag"},"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"2ac9b871_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"5daca375_runbook","main_task_local_reference":{"kind":"app_task","name":"2ac9b871_dag"},"variable_list":[]}},"variable_list":[]},{"description":"","action_list":[],"type":"DEB","service_local_reference_list":[{"kind":"app_service","name":"AZ1 DC"}],"name":"Package2","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package2"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"9debc4f9_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"e11514b4_runbook","main_task_local_reference":{"kind":"app_task","name":"9debc4f9_dag"},"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package2"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"4b72de48_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"76549c72_runbook","main_task_local_reference":{"kind":"app_task","name":"4b72de48_dag"},"variable_list":[]}},"variable_list":[]},{"description":"","action_list":[],"type":"DEB","service_local_reference_list":[{"kind":"app_service","name":"AZ2 DC"}],"name":"Package2_cloned_0","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package2_cloned_0"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"9debc4f9_dag_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"e11514b4_runbook_cloned_0","main_task_local_reference":{"kind":"app_task","name":"9debc4f9_dag_cloned_1"},"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package2_cloned_0"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"4b72de48_dag_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"76549c72_runbook_cloned_0","main_task_local_reference":{"kind":"app_task","name":"4b72de48_dag_cloned_1"},"variable_list":[]}},"variable_list":[]},{"description":"","action_list":[],"type":"DEB","service_local_reference_list":[{"kind":"app_service","name":"AZ3 DC"}],"name":"Package2_cloned_0_cloned_0","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package2_cloned_0_cloned_0"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"9debc4f9_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"e11514b4_runbook_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"9debc4f9_dag_cloned_1_cloned_1"},"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package2_cloned_0_cloned_0"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"4b72de48_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"76549c72_runbook_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"4b72de48_dag_cloned_1_cloned_1"},"variable_list":[]}},"variable_list":[]},{"description":"","action_list":[],"type":"DEB","service_local_reference_list":[{"kind":"app_service","name":"AZ1 Svc Helper"}],"name":"Package5","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package5"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"1336365e_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"f8eb8e22_runbook","main_task_local_reference":{"kind":"app_task","name":"1336365e_dag"},"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package5"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"ef008d44_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"e3505ad6_runbook","main_task_local_reference":{"kind":"app_task","name":"ef008d44_dag"},"variable_list":[]}},"variable_list":[]},{"description":"","action_list":[],"type":"DEB","service_local_reference_list":[{"kind":"app_service","name":"AZ2 Svc Helper"}],"name":"Package5_cloned_1","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package5_cloned_1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"1336365e_dag_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"f8eb8e22_runbook_cloned_1","main_task_local_reference":{"kind":"app_task","name":"1336365e_dag_cloned_1"},"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package5_cloned_1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"ef008d44_dag_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"e3505ad6_runbook_cloned_1","main_task_local_reference":{"kind":"app_task","name":"ef008d44_dag_cloned_1"},"variable_list":[]}},"variable_list":[]},{"description":"","action_list":[],"type":"DEB","service_local_reference_list":[{"kind":"app_service","name":"AZ3 Svc Helper"}],"name":"Package5_cloned_1_cloned_0","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package5_cloned_1_cloned_0"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"1336365e_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"f8eb8e22_runbook_cloned_1_cloned_0","main_task_local_reference":{"kind":"app_task","name":"1336365e_dag_cloned_1_cloned_1"},"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package5_cloned_1_cloned_0"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"ef008d44_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"e3505ad6_runbook_cloned_1_cloned_0","main_task_local_reference":{"kind":"app_task","name":"ef008d44_dag_cloned_1_cloned_1"},"variable_list":[]}},"variable_list":[]},{"description":"","action_list":[],"type":"DEB","service_local_reference_list":[{"kind":"app_service","name":"AZ1 Jumphost"}],"name":"Package2_cloned_1_cloned_0","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package2_cloned_1_cloned_0"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"9debc4f9_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"e11514b4_runbook_cloned_1_cloned_0","main_task_local_reference":{"kind":"app_task","name":"9debc4f9_dag_cloned_1_cloned_1"},"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package2_cloned_1_cloned_0"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"4b72de48_dag_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"76549c72_runbook_cloned_1_cloned_0","main_task_local_reference":{"kind":"app_task","name":"4b72de48_dag_cloned_1_cloned_1"},"variable_list":[]}},"variable_list":[]},{"description":"","action_list":[],"type":"DEB","service_local_reference_list":[{"kind":"app_service","name":"AZ2 Jumphost"}],"name":"Package2_cloned_1_cloned_0_cloned_0","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package2_cloned_1_cloned_0_cloned_0"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"9debc4f9_dag_cloned_1_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"e11514b4_runbook_cloned_1_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"9debc4f9_dag_cloned_1_cloned_1_cloned_1"},"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package2_cloned_1_cloned_0_cloned_0"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"4b72de48_dag_cloned_1_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"76549c72_runbook_cloned_1_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"4b72de48_dag_cloned_1_cloned_1_cloned_1"},"variable_list":[]}},"variable_list":[]},{"description":"","action_list":[],"type":"DEB","service_local_reference_list":[{"kind":"app_service","name":"AZ3 Jumphost"}],"name":"Package2_cloned_1_cloned_0_cloned_0_cloned_0","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package2_cloned_1_cloned_0_cloned_0_cloned_0"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"9debc4f9_dag_cloned_1_cloned_1_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"e11514b4_runbook_cloned_1_cloned_0_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"9debc4f9_dag_cloned_1_cloned_1_cloned_1_cloned_1"},"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package2_cloned_1_cloned_0_cloned_0_cloned_0"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"4b72de48_dag_cloned_1_cloned_1_cloned_1_cloned_1","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"76549c72_runbook_cloned_1_cloned_0_cloned_0_cloned_0","main_task_local_reference":{"kind":"app_task","name":"4b72de48_dag_cloned_1_cloned_1_cloned_1_cloned_1"},"variable_list":[]}},"variable_list":[]}],"app_profile_list":[{"deployment_create_list":[{"type":"GREENFIELD","action_list":[],"name":"5c8aa840_deployment","min_replicas":"1","default_replicas":"1","depends_on_list":[],"published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"Package1"}],"substrate_local_reference":{"kind":"app_substrate","name":"APITasks"},"variable_list":[],"description":""},{"type":"GREENFIELD","action_list":[],"name":"1152c091_deployment","min_replicas":"1","default_replicas":"1","depends_on_list":[],"published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"Package2"}],"substrate_local_reference":{"kind":"app_substrate","name":"AZ1_DC"},"variable_list":[],"description":""},{"type":"GREENFIELD","action_list":[],"name":"128a59a4_deployment","min_replicas":"1","default_replicas":"1","depends_on_list":[],"published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"Package2_cloned_0"}],"substrate_local_reference":{"kind":"app_substrate","name":"AZ2_DC"},"variable_list":[],"description":""},{"type":"GREENFIELD","action_list":[],"name":"911fc859_deployment","min_replicas":"1","default_replicas":"1","depends_on_list":[],"published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"Package2_cloned_0_cloned_0"}],"substrate_local_reference":{"kind":"app_substrate","name":"AZ3_DC"},"variable_list":[],"description":""},{"type":"GREENFIELD","action_list":[],"name":"90a2ebda_deployment","min_replicas":"1","default_replicas":"1","depends_on_list":[],"published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"Package5"}],"substrate_local_reference":{"kind":"app_substrate","name":"AZ1 Svc Helper VM"},"variable_list":[],"description":""},{"type":"GREENFIELD","action_list":[],"name":"a57799da_deployment","min_replicas":"1","default_replicas":"1","depends_on_list":[],"published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"Package5_cloned_1"}],"substrate_local_reference":{"kind":"app_substrate","name":"AZ2 Svc Helper VM"},"variable_list":[],"description":""},{"type":"GREENFIELD","action_list":[],"name":"c68e402c_deployment","min_replicas":"1","default_replicas":"1","depends_on_list":[],"published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"Package5_cloned_1_cloned_0"}],"substrate_local_reference":{"kind":"app_substrate","name":"AZ3 Svc Helper VM"},"variable_list":[],"description":""},{"type":"GREENFIELD","action_list":[],"name":"179cac72_deployment","min_replicas":"1","default_replicas":"1","depends_on_list":[],"published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"Package2_cloned_1_cloned_0"}],"substrate_local_reference":{"kind":"app_substrate","name":"AZ1_JumphostVM"},"variable_list":[],"description":""},{"type":"GREENFIELD","action_list":[],"name":"e32a1442_deployment","min_replicas":"1","default_replicas":"1","depends_on_list":[],"published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"Package2_cloned_1_cloned_0_cloned_0"}],"substrate_local_reference":{"kind":"app_substrate","name":"AZ2_JumphostVM"},"variable_list":[],"description":""},{"type":"GREENFIELD","action_list":[],"name":"f5e4201e_deployment","min_replicas":"1","default_replicas":"1","depends_on_list":[],"published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"Package2_cloned_1_cloned_0_cloned_0_cloned_0"}],"substrate_local_reference":{"kind":"app_substrate","name":"AZ3_JumphostVM"},"variable_list":[],"description":""}],"environment_reference_list":[],"patch_list":[],"description":"","action_list":[],"name":"Default","restore_config_list":[],"snapshot_config_list":[],"variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"CalmTunnelVM_API_Token","value":"656omgPe8nEHQZXV4>Z}J2{PwIa5ZOJIv:eYcm7(vVv47b2!HCFedC{3FF07Dkp$7577Exd67i@aPr6186oHPGH{z58DVudw+k+19J(595Zg3GZ1YP`WG4X7aX2F8RW0","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"CalmTunnelVM_API_User","value":"tunnelkey","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"CalmVM_VirtualIP","value":"172.16.103.10","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"Name of the Directory Provider in Calm.\n\nCan be found under Prism Central --> Settings --> Authentication","data_type":"BASE","type":"LOCAL","name":"DirectoryServiceName","value":"Tenant","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"Private Variable as the root OU is unlikely to change once it's set. Can be changed if required.","data_type":"BASE","type":"LOCAL","name":"ROOT_OU","value":"DSTA","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"Private Variable as the Domain is unlikely to change once it's set. Can be changed if required.","data_type":"BASE","type":"LOCAL","name":"DOMAIN","value":"tenant.dsta.local","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"Private Variable as the Operator Role is unlikely to change in CalmVM. Can be changed if required.","data_type":"BASE","type":"LOCAL","name":"ROLE_ADMIN","value":"Project Admin","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"Private Variable as the DNS IP is unlikely to change once it's set. Can be changed if required.","data_type":"BASE","type":"LOCAL","name":"DNS_SERVER","value":"172.16.101.181","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"blueprintIdentifier","value":"dsta","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"Default_Windows_Image_Name","value":"W2K19-Image","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"Default_Linux_Image_Name","value":"CentOS-8-GenericCloud","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"Provider Name of AZ3 PC in Calm","data_type":"BASE","type":"LOCAL","name":"AZ3_PROVIDER_NAME","value":"SGNTNXWLPC_AZ3","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"PC IP Address for AZ2\nPrivate because this value is unlikely to change once set.\nCan be changed if required.","data_type":"BASE","type":"LOCAL","name":"AZ3_PC_IP","value":"172.16.101.30","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"Provider Name of AZ2 PC in Calm","data_type":"BASE","type":"LOCAL","name":"AZ2_PROVIDER_NAME","value":"SGNTNXWLPC_AZ2","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"PC IP Address for AZ2\nPrivate because this value is unlikely to change once set.\nCan be changed if required.","data_type":"BASE","type":"LOCAL","name":"AZ2_PC_IP","value":"172.16.101.20","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"Provider Name of AZ1 PC in Calm","data_type":"BASE","type":"LOCAL","name":"AZ1_PROVIDER_NAME","value":"SGNTNXWLPC_AZ1","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"PC IP Address for AZ1\nPrivate because this value is unlikely to change once set.\nCan be changed if required.","data_type":"BASE","type":"LOCAL","name":"AZ1_PC_IP","value":"172.16.101.10","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"External Subnet Name in PC AZ3 for VPCs to attach to for external access\nPrivate as it's unlikely to be changed after setting\nCan be changed as required","data_type":"BASE","type":"LOCAL","name":"AZ3_VPC_EXTERNAL_SUBNET_NAME","value":"Internal VLAN 107","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"External Subnet Name in PC AZ2 for VPCs to attach to for external access\nPrivate as it's unlikely to be changed after setting\nCan be changed as required","data_type":"BASE","type":"LOCAL","name":"AZ2_VPC_EXTERNAL_SUBNET_NAME","value":"Internal VLAN 107","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"External Subnet Name in PC AZ1 for VPCs to attach to for external access\nPrivate as it's unlikely to be changed after setting\nCan be changed as required","data_type":"BASE","type":"LOCAL","name":"AZ1_VPC_EXTERNAL_SUBNET_NAME","value":"Internal VLAN 107","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"VPC IPAM DHCP Range\nFormat (space between first and last IP for the range): x.x.x.x y.y.y.y\ne.g 10.10.10.10 10.10.10.100\nPrivate Variable as the Common Service IP Pool is unlikely to change once it's set. Can be changed if required.","data_type":"BASE","type":"LOCAL","name":"AZ3_COMMON_SERVICE_POOL_RANGE","value":"10.10.1.160 10.10.1.220","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"VPC IPAM DHCP Range\nFormat (space between first and last IP for the range): x.x.x.x y.y.y.y\ne.g 10.10.10.10 10.10.10.100\nPrivate Variable as the Common Service IP Pool is unlikely to change once it's set. Can be changed if required.","data_type":"BASE","type":"LOCAL","name":"AZ2_COMMON_SERVICE_POOL_RANGE","value":"10.10.1.80 10.10.1.140","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"VPC IPAM DHCP Range\nFormat (space between first and last IP for the range): x.x.x.x y.y.y.y\ne.g 10.10.10.10 10.10.10.100\nPrivate Variable as the Common Service IP Pool is unlikely to change once it's set. Can be changed if required.","data_type":"BASE","type":"LOCAL","name":"AZ1_COMMON_SERVICE_POOL_RANGE","value":"10.10.1.10 10.10.1.70","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"Private Variable as the Common Service Default Gateway is unlikely to change once it's set. Can be changed if required.","data_type":"BASE","type":"LOCAL","name":"COMMON_SERVICE_DEFAULT_GATEWAY","value":"10.10.1.1","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"Private Variable as the Common Service Subnet Mask is unlikely to change once it's set. Can be changed if required.","data_type":"BASE","type":"LOCAL","name":"COMMON_SERVICE_SUBNET_MASK","value":"24","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"Private Variable as the Common Service Subnet CIDR is unlikely to change once it's set. Can be changed if required.","data_type":"BASE","type":"LOCAL","name":"COMMON_SERVICE_SUBNET_CIDR","value":"10.10.1.0","label":"","attrs":{"type":""},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"VPC IPAM DHCP Range\nFormat (space between first and last IP for the range): x.x.x.x y.y.y.y\ne.g 10.10.10.10 10.10.10.100","data_type":"BASE","type":"LOCAL","name":"AZ3_USER_SUBNET_POOL_RANGE","value":"10.10.10.160 10.10.10.220","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"VPC IPAM DHCP Range\nFormat (space between first and last IP for the range): x.x.x.x y.y.y.y\ne.g 10.10.10.10 10.10.10.100","data_type":"BASE","type":"LOCAL","name":"AZ2_USER_SUBNET_POOL_RANGE","value":"10.10.10.80 10.10.10.140","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"VPC IPAM DHCP Range\nFormat (space between first and last IP for the range): x.x.x.x y.y.y.y\ne.g 10.10.10.10 10.10.10.100","data_type":"BASE","type":"LOCAL","name":"AZ1_USER_SUBNET_POOL_RANGE","value":"10.10.10.10 10.10.10.70","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"Gateway for User Subnet","data_type":"BASE","type":"LOCAL","name":"USER_SUBNET_GATEWAY","value":"10.10.10.1","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"Subnet Mask for User Subnet","data_type":"BASE","type":"LOCAL","name":"USER_SUBNET_MASK","value":"24","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"CIDR Range for User Subnet","data_type":"BASE","type":"LOCAL","name":"USER_SUBNET_CIDR","value":"10.10.10.0","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"Please enter Tenant Admin UPN.\n\ne.g: winson.sou@tenant.dsta.local","data_type":"BASE","type":"LOCAL","name":"Tenant_Admin_UPN","value":"","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"TENANT_NAME","value":"","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}}]}],"published_service_definition_list":[],"default_credential_local_reference":{"kind":"app_credential","name":"AZ1_PC_CREDENTIALS"},"type":"USER"},"name":"Tenant Onboarding Blueprint v10"},"api_version":"3.0","metadata":{"last_update_time":"1638977599810767","kind":"blueprint","spec_version":25,"creation_time":"1638896234251004","name":"Tenant Onboarding Blueprint v10"}}